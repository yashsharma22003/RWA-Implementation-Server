{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "initialManagementKey",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_isLibrary",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "addClaim",
            "inputs": [
                {
                    "name": "_topic",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_scheme",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_issuer",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_signature",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "_data",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "_uri",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "outputs": [
                {
                    "name": "claimRequestId",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "addKey",
            "inputs": [
                {
                    "name": "_key",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "_purpose",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_type",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "approve",
            "inputs": [
                {
                    "name": "_id",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_approve",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [
                {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "execute",
            "inputs": [
                {
                    "name": "_to",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "_value",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "_data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "executionId",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "getClaim",
            "inputs": [
                {
                    "name": "_claimId",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "topic",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "scheme",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "issuer",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "signature",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "uri",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getClaimIdsByTopic",
            "inputs": [
                {
                    "name": "_topic",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "claimIds",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getKey",
            "inputs": [
                {
                    "name": "_key",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "purposes",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                },
                {
                    "name": "keyType",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "key",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getKeyPurposes",
            "inputs": [
                {
                    "name": "_key",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "_purposes",
                    "type": "uint256[]",
                    "internalType": "uint256[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getKeysByPurpose",
            "inputs": [
                {
                    "name": "_purpose",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "keys",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "getRecoveredAddress",
            "inputs": [
                {
                    "name": "sig",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "dataHash",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "addr",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "function",
            "name": "initialize",
            "inputs": [
                {
                    "name": "initialManagementKey",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "isClaimValid",
            "inputs": [
                {
                    "name": "_identity",
                    "type": "address",
                    "internalType": "contract IIdentity"
                },
                {
                    "name": "claimTopic",
                    "type": "uint256",
                    "internalType": "uint256"
                },
                {
                    "name": "sig",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "internalType": "bytes"
                }
            ],
            "outputs": [
                {
                    "name": "claimValid",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "keyHasPurpose",
            "inputs": [
                {
                    "name": "_key",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "_purpose",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "result",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "removeClaim",
            "inputs": [
                {
                    "name": "_claimId",
                    "type": "bytes32",
                    "internalType": "bytes32"
                }
            ],
            "outputs": [
                {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "removeKey",
            "inputs": [
                {
                    "name": "_key",
                    "type": "bytes32",
                    "internalType": "bytes32"
                },
                {
                    "name": "_purpose",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "success",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "version",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "pure"
        },
        {
            "type": "event",
            "name": "Approved",
            "inputs": [
                {
                    "name": "executionId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "approved",
                    "type": "bool",
                    "indexed": false,
                    "internalType": "bool"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ClaimAdded",
            "inputs": [
                {
                    "name": "claimId",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                },
                {
                    "name": "topic",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "scheme",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "issuer",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "signature",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                },
                {
                    "name": "uri",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ClaimChanged",
            "inputs": [
                {
                    "name": "claimId",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                },
                {
                    "name": "topic",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "scheme",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "issuer",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "signature",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                },
                {
                    "name": "uri",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ClaimRemoved",
            "inputs": [
                {
                    "name": "claimId",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                },
                {
                    "name": "topic",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "scheme",
                    "type": "uint256",
                    "indexed": false,
                    "internalType": "uint256"
                },
                {
                    "name": "issuer",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "signature",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                },
                {
                    "name": "uri",
                    "type": "string",
                    "indexed": false,
                    "internalType": "string"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "Executed",
            "inputs": [
                {
                    "name": "executionId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ExecutionFailed",
            "inputs": [
                {
                    "name": "executionId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "ExecutionRequested",
            "inputs": [
                {
                    "name": "executionId",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "to",
                    "type": "address",
                    "indexed": true,
                    "internalType": "address"
                },
                {
                    "name": "value",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "data",
                    "type": "bytes",
                    "indexed": false,
                    "internalType": "bytes"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "KeyAdded",
            "inputs": [
                {
                    "name": "key",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                },
                {
                    "name": "purpose",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "keyType",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        },
        {
            "type": "event",
            "name": "KeyRemoved",
            "inputs": [
                {
                    "name": "key",
                    "type": "bytes32",
                    "indexed": true,
                    "internalType": "bytes32"
                },
                {
                    "name": "purpose",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                },
                {
                    "name": "keyType",
                    "type": "uint256",
                    "indexed": true,
                    "internalType": "uint256"
                }
            ],
            "anonymous": false
        }
    ],
    "bytecode": {
        "object": "0x608034620002d4576001600160401b039062002b3190601f38839003908101601f191682019084821183831017620002195780839160409586948552833981010312620002d45780516001600160a01b03811690819003620002d45760208092015191821592831503620002d45761ffff19928360065416908160065583156200029057156200027d57506006549260ff9384811615801562000273575b156200022f57166101011760065583518181019283528181529283850192868411858510176200021957838652845190209260009684885260606001968786528660028a8c20015501908282109082111762000205578652848152838752848352858720908154868355808710620001db575b5090875282872085885b818110620001c657505050505081855282808587200155828552600281528385209081549168010000000000000000831015620001b2578483018082558310156200019e577f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e99287928592879899528320015580a45b516128579081620002da8239f35b634e487b7160e01b87526032600452602487fd5b634e487b7160e01b87526041600452602487fd5b8585855116940193818401550186906200011a565b8289528680868b2092830192015b828110620001f957505062000110565b8a8155018790620001e9565b634e487b7160e01b88526041600452602488fd5b634e487b7160e01b600052604160045260246000fd5b855162461bcd60e51b815260048101849052601e60248201527f496e697469616c206b65792077617320616c72656164792073657475702e00006044820152606490fd5b50303b156200009d565b9250505060019192501760065562000190565b855162461bcd60e51b815260048101849052601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606490fd5b600080fdfe60806040526004361015610013575b600080fd5b60003560e01c806312aaac70146101535780631d3812401461014a5780634eee424a1461014157806353d413c51461013857806354fd4d501461012f578063747442d31461012657806380e9e9e11461011d5780639010f72614610114578063b1a34e0d1461010b578063b61d27f614610102578063c0969a6e146100f9578063c3b129e3146100f0578063c4d66de8146100e7578063c9100bcb146100de578063d202158d146100d55763fb307b34146100cd57600080fd5b61000e61124d565b5061000e61122b565b5061000e6111a0565b5061000e610fa5565b5061000e610f53565b5061000e610eeb565b5061000e610d31565b5061000e610c8d565b5061000e610af3565b5061000e610a7c565b5061000e6109f6565b5061000e6109a5565b5061000e6106af565b5061000e610406565b5061000e6101f4565b5061000e610190565b90815180825260208080930193019160005b82811061017c575050505090565b83518552938101939281019260010161016e565b503461000e57602036600319011261000e5760043560005260016020526101e560406000206001604060002001546101d0600260406000200154926114cf565b9160405193849360608552606085019061015c565b91602084015260408301520390f35b503461000e57606036600319011261000e5760048035906024356044359160019061022a8260ff60065460081c1615151461128e565b30331480156103d8575b61023d9061151e565b83856002610255826000526001602052604060002090565b01540361037a5750610279610274866000526001602052604060002090565b6114cf565b6000835b6102f1575b505050506102a38161029e856000526001602052604060002090565b611644565b6102bb8361029e836000526002602052604060002090565b604051927f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9600080a460018152602090f35b0390f35b8151811015610375578461030582846115fc565b511461031a57610314906114a2565b8361027d565b6103718360405191829162461bcd60e51b8352820160809060208152602160208201527f436f6e666c6963743a204b657920616c72656164792068617320707572706f736040820152606560f81b60608201520190565b0390fd5b610282565b919050846002610394826000526001602052604060002090565b01556103bd6103a1610bed565b8481526103b8876000526001602052604060002090565b6115ad565b6103d1856000526001602052604060002090565b01556102a3565b5061023d6103ff6040516020810190338252602081526103f781610baf565b519020612348565b9050610234565b503461000e57602036600319011261000e5760043560016104328160ff60065460081c1615151461128e565b3033148015610681575b6104459061212a565b610459826000526004602052604060002090565b5490811561062857600081610478846000526005602052604060002090565b54905b6105e3575b916104e484926104de6104c46104ba6105d799976104b46104ae6105d29b6000526005602052604060002090565b91611d8c565b9061161e565b90549060031b1c90565b916104d9866000526005602052604060002090565b61161e565b90611330565b6105006104fb836000526005602052604060002090565b611e39565b610514836000526004602052604060002090565b015490827f3cf57863a89432c61c4a27073c6ee39e8a764bff5a05aebfbcdcdc80b2e6130a6105606002610552846000526004602052604060002090565b01546001600160a01b031690565b6003610576846000526004602052604060002090565b01906105bf6004610591866000526004602052604060002090565b0160056105a8876000526004602052604060002090565b019060405194859460018060a01b03169985612255565b0390a46000526004602052604060002090565b6122dd565b60405160018152602090f35b90846106006104ba836104d9886000526005602052604060002090565b146106225761060e906114a2565b908082101561061d578261047b565b610480565b90610480565b60405162461bcd60e51b815260206004820152602b60248201527f4e6f6e4578697374696e673a205468657265206973206e6f20636c61696d207760448201526a1a5d1a081d1a1a5cc8125160aa1b6064820152608490fd5b506104456106a86040516020810190338252602081526106a081610baf565b5190206123e4565b905061043c565b503461000e5760408060031936011261000e5760048035916024359060016106e28160ff60065460081c1615151461128e565b3033148015610940575b6106f59061151e565b61071785600261070f826000526001602052604060002090565b015414611d36565b8061072f610274876000526001602052604060002090565b946000915b6108b1575b5061075861075061074a8751611d8c565b876115fc565b5191866115fc565b5261077684610771876000526001602052604060002090565b611da3565b61078d6104fb866000526001602052604060002090565b8060006107a4856000526002602052604060002090565b54925b610874575b6107e9906104de6107d46104ba61081d966104b46104ae8b6000526002602052604060002090565b916104d9886000526002602052604060002090565b6108006104fb856000526002602052604060002090565b610814866000526001602052604060002090565b01549351611d8c565b15610853575b51927f585a4aef50f8267a92b32412b331b20f7f8b96f2245b253b9cc50dcc621d3397600080a460018152602090f35b61086f61086a856000526001602052604060002090565b611e79565b610823565b866108906104ba836104d9896000526002602052604060002090565b146108ac5761089e906114a2565b828110156108ac57816107a7565b6107ac565b90846108bd82886115fc565b511461093a576108cc906114a2565b90818651146108db5782610734565b61037190845191829162461bcd60e51b8352820160809060208152602a60208201527f4e6f6e4578697374696e673a204b657920646f65736e27742068617665207375604082015269636820707572706f736560b01b60608201520190565b90610739565b506106f561095e83516020810190338252602081526103f781610baf565b90506106ec565b919082519283825260005b848110610991575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610970565b503461000e57600036600319011261000e576102ed6040516109c681610baf565b6005815264322e322e3160d81b6020820152604051918291602083526020830190610965565b8015150361000e57565b503461000e57604036600319011261000e576020610a37602435610a19816109ec565b610a2f600160ff60065460081c1615151461128e565b600435611c19565b6040519015158152f35b6020908160408183019282815285518094520193019160005b828110610a68575050505090565b835185529381019392810192600101610a5a565b503461000e5760208060031936011261000e5760043560005260058152604060002090604051908181845491828152019360005281600020916000905b828210610adc576102ed85610ad081890382610bcb565b60405191829182610a41565b835486529485019460019384019390910190610ab9565b503461000e5760208060031936011261000e5760043560005260028152604060002090604051908181845491828152019360005281600020916000905b828210610b47576102ed85610ad081890382610bcb565b835486529485019460019384019390910190610b30565b6001600160a01b0381160361000e57565b50634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610ba257604052565b610baa610b6f565b604052565b6040810190811067ffffffffffffffff821117610ba257604052565b90601f8019910116810190811067ffffffffffffffff821117610ba257604052565b604051906020820182811067ffffffffffffffff821117610ba257604052565b60209067ffffffffffffffff8111610c2b575b601f01601f19160190565b610c33610b6f565b610c20565b929192610c4482610c0d565b91610c526040519384610bcb565b82948184528183011161000e578281602093846000960137010152565b9080601f8301121561000e57816020610c8a93359101610c38565b90565b503461000e5760c036600319011261000e57604435610cab81610b5e565b67ffffffffffffffff60643581811161000e57610ccc903690600401610c6f565b9160843582811161000e57610ce5903690600401610c6f565b60a43592831161000e573660238401121561000e576102ed93610d15610d21943690602481600401359101610c38565b92602435600435611ead565b6040519081529081906020820190565b50606036600319011261000e57600435610d4a81610b5e565b6024359060443567ffffffffffffffff811161000e576102ed927f8afcfabcb00e47a53a8fc3e9f23ff47ee1926194bb1350dd007c50b412a6cee892610d97610e4d933690600401610c6f565b90610dae600160ff60065460081c1615151461128e565b6000549481610deb8793610dcc856000526003602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b846001610e02856000526003602052604060002090565b0155610e24846002610e1e866000526003602052604060002090565b016113ae565b610e2f6000546114a2565b6000556040516001600160a01b0391909116958694829190826114be565b0390a4604080513360208083019182528252601f199392610e7392906103f79082610bcb565b15610e94575050610e838161168c565b506040519081529081906020820190565b3014159081610eb3575b5015610d2157610ead8161168c565b50610d21565b604080513360208201908152610ee59450929091610edd9190839081015b03908101835282610bcb565b519020612475565b38610e9e565b503461000e57608036600319011261000e57600435610f0981610b5e565b67ffffffffffffffff60443581811161000e57610f2a903690600401610c6f565b9160643591821161000e57602092610f49610a37933690600401610c6f565b9160243590612642565b503461000e57604036600319011261000e5760043567ffffffffffffffff811161000e57610f93610f8a6020923690600401610c6f565b60243590612716565b6040516001600160a01b039091168152f35b503461000e57602036600319011261000e57600435610fc381610b5e565b6001600160a01b0381161561110a57600654600191829160ff16158015611101575b610fee9061279a565b611000600160ff196006541617600655565b61101461010061ff00196006541617600655565b604080516001600160a01b0390921660208301908152919061104390829081015b03601f198101835282610bcb565b51902080600261105d826000526001602052604060002090565b015561108761106a610bed565b60018152611082836000526001602052604060002090565b6127e6565b6110a68261109f836000526001602052604060002090565b0160019055565b600160005260026020526110da817fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e0611644565b7f480000bb1edad8ca1470381cc334b1917fbd51c6531f3a623ea8e0ec7e38a6e9600080a4005b50303b15610fe5565b60405162461bcd60e51b815260206004820152601f60248201527f696e76616c696420617267756d656e74202d207a65726f2061646472657373006044820152606490fd5b94919361119293610c8a9795611184938852602088015260018060a01b0316604087015260c0606087015260c0860190610965565b908482036080860152610965565b9160a0818403910152610965565b503461000e57602036600319011261000e5760048035600090815260208290526040908190208054600182015460028301548451919592946102ed9490936005820193926001600160a01b0316916112209161121a919081019061121590869061120e9082906003016118aa565b0386610bcb565b61232d565b9361232d565b93519687968761114f565b503461000e57604036600319011261000e576020610a376024356004356125ad565b503461000e57602036600319011261000e5760043560005260016020526102ed61127a60406000206114cf565b60405191829160208352602083019061015c565b1561129557565b60405162461bcd60e51b815260206004820152603360248201527f496e746572616374696e67207769746820746865206c69627261727920636f6e6044820152723a3930b1ba1034b9903337b93134b23232b71760691b6064820152608490fd5b90600182811c92168015611326575b602083101461131057565b634e487b7160e01b600052602260045260246000fd5b91607f1691611305565b9161134c9183549060031b600019811b9283911b169119161790565b9055565b81811061135b575050565b60008155600101611350565b9190601f811161137657505050565b6113a2926000526020600020906020601f840160051c830193106113a4575b601f0160051c0190611350565b565b9091508190611395565b919091825167ffffffffffffffff811161147e575b6113d7816113d184546112f6565b84611367565b602080601f8311600114611413575081929394600092611408575b50508160011b916000199060031b1c1916179055565b0151905038806113f2565b90601f1983169561142985600052602060002090565b926000905b8882106114665750508360019596971061144d575b505050811b019055565b015160001960f88460031b161c19169055388080611443565b8060018596829496860151815501950193019061142e565b611486610b6f565b6113c3565b50634e487b7160e01b600052601160045260246000fd5b60019060001981146114b2570190565b6114ba61148b565b0190565b906020610c8a928181520190610965565b9060405191828154918282526020928383019160005283600020936000905b828210611504575050506113a292500383610bcb565b8554845260019586019588955093810193909101906114ee565b1561152557565b60405162461bcd60e51b815260206004820152603060248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f742068617660448201526f65206d616e6167656d656e74206b657960801b6064820152608490fd5b80546001825580600110611595575050565b6113a291600052600160206000209182019101611350565b906115b782611583565b906000526020908160002060005b600181106115d35750505050565b825182820155918301916001016115c5565b50634e487b7160e01b600052603260045260246000fd5b6020918151811015611611575b60051b010190565b6116196115e5565b611609565b8054821015611637575b60005260206000200190600090565b61163f6115e5565b611628565b61166661134c91805490600160401b82101561167f575b60018201815561161e565b819391549060031b600019811b9283911b169119161790565b611687610b6f565b61165b565b610c8a906116a6600160ff60065460081c1615151461128e565b611950565b156116b257565b60405162461bcd60e51b815260206004820152602760248201527f43616e6e6f7420617070726f76652061206e6f6e2d6578697374696e6720657860448201526632b1baba34b7b760c91b6064820152608490fd5b1561170e57565b60405162461bcd60e51b815260206004820152601860248201527f5265717565737420616c726561647920657865637574656400000000000000006044820152606490fd5b1561175a57565b60405162461bcd60e51b815260206004820152601f60248201527f53656e64657220646f6573206e6f74206861766520616374696f6e206b6579006044820152606490fd5b156117a657565b60405162461bcd60e51b815260206004820152602360248201527f53656e64657220646f6573206e6f742068617665206d616e6167656d656e74206044820152626b657960e81b6064820152608490fd5b600092918154611806816112f6565b9260019180831690811561185f5750600114611823575b50505050565b90919293945060005260209081600020906000915b85831061184e575050505001903880808061181d565b805485840152918301918101611838565b60ff191684525050508115159091020191503880808061181d565b3d156118a5573d9061188b82610c0d565b916118996040519384610bcb565b82523d6000602084013e565b606090565b90600092918054916118bb836112f6565b91828252600193848116908160001461191c57506001146118dc5750505050565b90919394506000526020928360002092846000945b83861061190857505050500101903880808061181d565b8054858701830152940193859082016118f1565b9294505050602093945060ff191683830152151560051b0101903880808061181d565b906020610c8a9281815201906118aa565b61195d60005482106116ab565b61199061198b611987600361197c856000526003602052604060002090565b015460081c60ff1690565b1590565b611707565b6119b46119a7826000526003602052604060002090565b546001600160a01b031690565b6001600160a01b03919082163003611be5576040805133602082019081526119ed926119e892906103f79082908101611035565b61179f565b807fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d860405180611a2281906001602083019252565b0390a2611a4c6003611a3e836000526003602052604060002090565b01805460ff19166001179055565b600080611a666119a7846000526003602052604060002090565b611aa46001611a7f866000526003602052604060002090565b01546002611a97876000526003602052604060002090565b01604051928380926117f7565b03925af1611ab061187a565b5015611b6257611adf6003611acf836000526003602052604060002090565b01805461ff001916610100179055565b611af66119a7826000526003602052604060002090565b907f1f920dbda597d7bf95035464170fa58d0a4b57f13a1c315ace6793b9f63688b86001611b2e836000526003602052604060002090565b0154936002611b47846000526003602052604060002090565b0193611b5a60405192839216958261193f565b0390a4600190565b611b796119a7826000526003602052604060002090565b907fe10c49d9f7c71da23262367013434763cfdb2332267641728d25cd712c5c6a686001611bb1836000526003602052604060002090565b0154936002611bca846000526003602052604060002090565b0193611bdd60405192839216958261193f565b0390a4600090565b604080513360208201908152611c1492611c0f9290611c079082908101611035565b519020612518565b611753565b6119ed565b611c2660005482106116ab565b611c4561198b611987600361197c856000526003602052604060002090565b6001611c5e6119a7836000526003602052604060002090565b92818060a01b03938430911614600014611d0f57604080513360208201908152611c94926119e892906103f79082908101611035565b604051811515815283907fb3932da477fe5d6c8ff2eafef050c0f3a1af18fc07121001482600f36f3715d890602090a2151503611ce457611a4c6003611a3e836000526003602052604060002090565b611d0a9150611cff6003916000526003602052604060002090565b01805460ff19169055565b600090565b604080513360208201908152611d3192611c0f9290611c079082908101611035565b611c94565b15611d3d57565b60405162461bcd60e51b815260206004820152602160248201527f4e6f6e4578697374696e673a204b65792069736e2774207265676973746572656044820152601960fa1b6064820152608490fd5b600019810191908211611d9b57565b6113a261148b565b81519167ffffffffffffffff8311611e2c575b600160401b8311611e1f575b8154838355808410611e01575b50602080910191600052806000209060005b848110611def575050505050565b83518382015592810192600101611de1565b611e1990836000528460206000209182019101611350565b38611dcf565b611e27610b6f565b611dc2565b611e34610b6f565b611db6565b8054908115611e635760001991820191611e53838361161e565b909182549160031b1b1916905555565b634e487b7160e01b600052603160045260246000fd5b6002600091805483825580611e94575b508260018201550155565b81845260208420611ea791810190611350565b38611e89565b9294909394611ec8600160ff60065460081c1615151461128e565b3033148015612104575b611edb9061212a565b6001600160a01b03831694308603612084575b604080516001600160a01b03861660208201908152918101879052611f168160608101611035565b51902096879486611f31876000526004602052604060002090565b55826001611f49886000526004602052604060002090565b0155611f65846003610e1e896000526004602052604060002090565b611f7f826004610e1e896000526004602052604060002090565b611f99856005610e1e896000526004602052604060002090565b87611fc2611fb660026105528a6000526004602052604060002090565b6001600160a01b031690565b14612051579361204b9161203f7f46149b18aa084502c3f12bc75e19eda8bda8d102b82cce8474677a6d0d5f43c5966120098961029e8c6000526005602052604060002090565b600261201f8a6000526004602052604060002090565b0180546001600160a01b0319166001600160a01b03909216919091179055565b60405194859485612227565b0390a490565b507f3bab293fc00db832d7619a9299914251b8747c036867ec056cbd506f60135b139361204b9160405194859485612227565b60405163604b4d3760e11b81526120c490602081806120a98c888c30600486016121a6565b03818b5afa9081156120f7575b6000916120c9575b506121eb565b611eee565b6120ea915060203d81116120f0575b6120e28183610bcb565b810190612191565b386120be565b503d6120d8565b6120ff6121de565b6120b6565b50611edb6121236040516020810190338252602081526106a081610baf565b9050611ed2565b1561213157565b60405162461bcd60e51b815260206004820152603260248201527f5065726d697373696f6e733a2053656e64657220646f6573206e6f74206861766044820152716520636c61696d207369676e6572206b657960701b6064820152608490fd5b9081602091031261000e5751610c8a816109ec565b92610c8a94926121d09260018060a01b031685526020850152608060408501526080840190610965565b916060818403910152610965565b506040513d6000823e3d90fd5b156121f257565b60405162461bcd60e51b815260206004820152600d60248201526c696e76616c696420636c61696d60981b6044820152606490fd5b92612247610c8a95936121d0938652608060208701526080860190610965565b908482036040860152610965565b92612275610c8a95936122839386526080602087015260808601906118aa565b9084820360408601526118aa565b9160608184039101526118aa565b61229b81546112f6565b90816122a5575050565b81601f600093116001146122b7575055565b818352602083206122d391601f0160051c810190600101611350565b8160208120915555565b60056000918281558260018201558260028201556122fd60038201612291565b61230960048201612291565b0161231481546112f6565b8061231e57505050565b601f81116001146122b7575055565b906113a261234192604051938480926118aa565b0383610bcb565b600052600180602052604060002060026040519161236583610b86565b61236e816114cf565b83528381015460208401520154806040830152156123dd57600090825b612398575b505050600090565b80519182518110156123d757836123b08282956115fc565b511480156123d2575b6123cc576123c6906114a2565b9161238b565b50505090565b6123b9565b50612390565b5050600090565b600052600180602052604060002060026040519161240183610b86565b61240a816114cf565b83528381015460208401520154806040830152156123dd57600090825b61243357505050600090565b80519182518110156123d75761244a8185946115fc565b5183811490811561246a575b506123cc57612464906114a2565b91612427565b600391501438612456565b60005260018060205260406000206040519061249082610b86565b612499816114cf565b82528281015460208301526002809101548060408401521561239057600091835b6124c8575b50505050600090565b8051928351811015612512576124df8186956115fc565b5183858214918215612508575b5050612501576124fb906114a2565b926124ba565b5050505090565b14905083386124ec565b506124bf565b60005260018060205260406000206040519061253382610b86565b61253c816114cf565b82528281015460208301526002809101548060408401521561239057600091835b61256a5750505050600090565b8051928351811015612512576125818186956115fc565b51838582149182156125a3575b50506125015761259d906114a2565b9261255d565b149050833861258e565b600052600190816020526040600020906002604051926125cc84610b86565b6125d5816114cf565b845284810154602085015201548060408401521561239057600091835b6125ff5750505050600090565b8051928351811015612512576126168186956115fc565b5183858214918215612638575b505061250157612632906114a2565b926125f2565b1490508338612623565b9161270893926126e492612679604051958692602084019460018060a01b0316855260408401526060808401526080830190610965565b039361268d601f1995868101835282610bcb565b5190206040516126db816126cf602082019485603c917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008252601c8201520190565b03868101835282610bcb565b51902090612716565b604080516001600160a01b0390921660208301908152926106a09183908101610ed1565b61271157600090565b600190565b906000916041815103612795576000918160209460ff8660809501519160606040850151940151901a601b811061277d575b60405194855216868401526040830152606082015282805260015afa15612770575b60005190565b6127786121de565b61276a565b601b01818111156127485761279061148b565b612748565b505090565b156127a157565b60405162461bcd60e51b815260206004820152601e60248201527f496e697469616c206b65792077617320616c72656164792073657475702e00006044820152606490fd5b906127f082611583565b906000526020908160002060005b6001811061280c5750505050565b825160ff1682820155918301916001016127fe56fea26469706673582212200d38c86a92f50e770737640edc9b470d317d245688e2204f54e145b08735165464736f6c63430008110033",
        "sourceMap": "480:20431:17:-:0;;;;-1:-1:-1;;;;;480:20431:17;;;;;;;;;;;-1:-1:-1;;480:20431:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;480:20431:17;;;;;;;;;;;;;;;;;;;;;;;;;;786:5:24;480:20431:17;;;;786:5:24;480:20431:17;1771:34;;480:20431;;;;;;786:5:24;480:20431:17;;;;;;;20111:13;480:20431;;20111:33;;1852:129;480:20431;;;;;;786:5:24;480:20431:17;;;20273:32;;;480:20431;;;20273:32;;;480:20431;;;;;;;;;;;;;;;;;;;20263:43;;-1:-1:-1;;480:20431:17;;;;;;;;;;;20316:15;480:20431;;;20316:15;480:20431;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1852:129;480:20431;;;;;;;;;;;;;;;;;;;;;;;;;;;;20384:19;480:20431;;;;20316:15;480:20431;;;;;;;;;;;;;;;;;;;;;;;;;;20460:20;480:20431;;;;;;;;;;;;;20460:20;;1852:129;480:20431;;;;;;;;;-1:-1:-1;;;480:20431:17;;;;;;;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;;;;;20111:33;20752:4;;20843:36;20895:7;20111:33;;1852:129;480:20431;;;;;;;;;786:5:24;480:20431:17;1852:129;;480:20431;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;480:20431:17;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "",
        "sourceMap": "480:20431:17:-:0;;;;;;;;;-1:-1:-1;480:20431:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;480:20431:17;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;480:20431:17;;;;;;-1:-1:-1;480:20431:17;4430:5;480:20431;;;;-1:-1:-1;480:20431:17;4430:5;480:20431;-1:-1:-1;480:20431:17;4452:19;480:20431;;4473:15;480:20431;-1:-1:-1;480:20431:17;4473:15;480:20431;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;480:20431:17;;;;;;;;;;;;716:4;;480:20431;692:84;480:20431;;700:12;480:20431;;;;;;700:20;692:84;:::i;:::-;958:4;936:10;:27;:82;;;;480:20431;928:152;;;:::i;:::-;7232:11;;:15;:11;;480:20431;;716:4;480:20431;;;;;;;7232:11;:15;480:20431;7232:23;;;7300:11;480:20431;7300:11;;480:20431;;716:4;480:20431;;;;;;;7300:11;480:20431;:::i;:::-;-1:-1:-1;7339:24:17;716:4;;;7334:290;7638:11;;;;:35;:11;;;480:20431;;716:4;480:20431;;;;;;;7638:11;:35;:::i;:::-;7835;:24;;;480:20431;;7232:15;480:20431;;;;;;;7835:35;480:20431;;7886:31;;-1:-1:-1;7886:31:17;;716:4;480:20431;;;;;;;;;7401:17;480:20431;;7365:34;;;;;7456:26;;;;;:::i;:::-;480:20431;7505:19;7501:109;;7401:17;;;:::i;:::-;7339:24;;;7501:109;7548:43;480:20431;;;7548:43;;;;;;;;;;480:20431;;;;;;;;;;;;;;;-1:-1:-1;;;480:20431:17;;;;;;;7548:43;;;;7365:34;;;7228:597;7704:11;;;;7232:15;7704:11;;480:20431;;716:4;480:20431;;;;;;;7704:11;:15;480:20431;;;;:::i;:::-;;;;7740:11;;480:20431;;716:4;480:20431;;;;;;;7740:11;480:20431;:::i;:::-;7787:11;;480:20431;;716:4;480:20431;;;;;;;7787:11;:19;480:20431;7228:597;;936:82;480:20431;928:152;967:51;480:20431;;;991:22;;936:10;;480:20431;;;991:22;;;;;:::i;:::-;480:20431;981:33;;967:51;:::i;:::-;936:82;;;;480:20431;;;;;;;-1:-1:-1;;480:20431:17;;;;;;716:4;692:84;480:20431;;700:12;480:20431;;;;;;700:20;692:84;:::i;:::-;1258:4;1236:10;:27;:82;;;;480:20431;1228:154;;;:::i;:::-;14240:17;;480:20431;;;;;;;;;;14240:17;480:20431;14277:11;;;14273:95;;-1:-1:-1;14426:22:17;;;480:20431;;14426:14;480:20431;;;;;;;14426:22;480:20431;14465:175;716:4;;;14465:175;14695:22;14650:84;14695:22;;14650:34;480:20431;14695:39;15051:24;14695:22;;14718:15;14695:22;15058:17;14695:22;480:20431;;14426:14;480:20431;;;;;;;14695:22;14718:15;;:::i;:::-;14695:39;;:::i;:::-;480:20431;;;;;;;;;14650:22;;;480:20431;;14426:14;480:20431;;;;;;;14650:22;:34;:::i;:::-;:84;;:::i;:::-;14744:26;:22;;480:20431;;14426:14;480:20431;;;;;;;14744:22;:26;:::i;:::-;14856:17;;480:20431;;;;;;;;;;14856:17;:24;480:20431;14894:17;;14788:252;14894:24;;:17;;480:20431;;;;;;;;;;14894:17;:24;480:20431;-1:-1:-1;;;;;480:20431:17;;;14894:24;480:20431;14932:17;;480:20431;;;;;;;;;;14932:17;:27;14973:17;14788:252;480:20431;14973:17;;480:20431;;;;;;;;;;14973:17;:22;14426:14;15009:17;;480:20431;;;;;;;;;;15009:17;:21;480:20431;;;;;;;;;;;;14788:252;;;:::i;:::-;;;;480:20431;;;;;;;;;;15058:17;15051:24;:::i;:::-;480:20431;;716:4;480:20431;;;;;14465:175;14472:22;;480:20431;14472:34;:22;;;480:20431;;14426:14;480:20431;;;;;;;;14472:46;;;14534:12;;;:::i;:::-;14565:25;;;;;14561:69;;14465:175;;;14561:69;14610:5;;14472:46;;;;14273:95;480:20431;;-1:-1:-1;;;14304:53:17;;480:20431;;14304:53;;480:20431;;;;;;;;;;;-1:-1:-1;;;480:20431:17;;;;;;7548:43;1236:82;480:20431;1228:154;1267:51;480:20431;;;1291:22;;1236:10;;480:20431;;;1291:22;;;;;:::i;:::-;480:20431;1281:33;;1267:51;:::i;:::-;1236:82;;;;480:20431;;;;;;;;;;;;;;;;;;;;716:4;;692:84;480:20431;;700:12;480:20431;;;;;;700:20;692:84;:::i;:::-;958:4;936:10;:27;:82;;;;480:20431;928:152;;;:::i;:::-;10197:69;10205:11;:15;:11;;480:20431;;716:4;480:20431;;;;;;;10205:11;:15;480:20431;10205:23;10197:69;:::i;:::-;10305:11;480:20431;10305:11;;480:20431;;716:4;480:20431;;;;;;;;10336:21;-1:-1:-1;10367:220:17;716:4;;;10367:220;480:20431;10597:57;10623:31;10633:20;480:20431;;10633:20;:::i;:::-;10623:31;;:::i;:::-;480:20431;10597:57;;;:::i;:::-;480:20431;;10664:11;;;480:20431;;716:4;480:20431;;;;;;;10664:11;480:20431;:::i;:::-;10706:24;:11;;480:20431;;716:4;480:20431;;;;;;;10706:24;10743:17;-1:-1:-1;10789:24:17;;480:20431;;7232:15;480:20431;;;;;;;10789:24;480:20431;10831:167;716:4;;;10831:167;11008:78;11045:24;11008:34;480:20431;11045:41;11186:20;11045:24;11070:15;11045:24;;480:20431;;7232:15;480:20431;;;;;;;;11008:24;;;480:20431;;7232:15;480:20431;;;;;;;11008:78;11096:28;:24;;480:20431;;7232:15;480:20431;;;;;;;11096:28;11152:11;;480:20431;;716:4;480:20431;;;;;;;11152:11;:19;480:20431;;;11186:20;:::i;:::-;:25;11182:74;;10831:167;480:20431;11271:35;;-1:-1:-1;11271:35:17;;716:4;480:20431;;;;;11182:74;11227:18;11234:11;;480:20431;;716:4;480:20431;;;;;;;11234:11;11227:18;:::i;:::-;11182:74;;10831:167;10838:24;480:20431;10838:34;:24;;;480:20431;;7232:15;480:20431;;;;;;;;10838:42;;;10896:10;;;:::i;:::-;10925:23;;;;10921:67;;10831:167;;;10921:67;10968:5;;10367:220;10374:23;;;;;;:::i;:::-;480:20431;10374:35;;;10425:14;;;:::i;:::-;;;480:20431;;10458:32;10454:123;;10367:220;;;10454:123;10510:52;480:20431;;;7548:43;;;;;;10510:52;;;;480:20431;;;;;;;;;;;;;;;-1:-1:-1;;;480:20431:17;;;;;;;10374:35;;;;936:82;480:20431;928:152;967:51;480:20431;;;991:22;;936:10;;480:20431;;;991:22;;;;;:::i;967:51::-;936:82;;;;480:20431;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;480:20431:17;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;480:20431:17;;;;;8385:1560;480:20431;;;;;:::i;:::-;692:84;716:4;480:20431;700:12;480:20431;;;;;;700:20;692:84;:::i;:::-;480:20431;;8385:1560;:::i;:::-;480:20431;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;480:20431:17;5964:14;480:20431;;;-1:-1:-1;480:20431:17;;;;;;;;;;;;;;;-1:-1:-1;480:20431:17;;-1:-1:-1;480:20431:17;;-1:-1:-1;480:20431:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;480:20431:17;5426:14;480:20431;;;-1:-1:-1;480:20431:17;;;;;;;;;;;;;;;-1:-1:-1;480:20431:17;;-1:-1:-1;480:20431:17;;-1:-1:-1;480:20431:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;480:20431:17;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;480:20431:17;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;480:20431:17;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;-1:-1:-1;;480:20431:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12736:22;480:20431;;;;;;;;;;;:::i;:::-;;;;;;12736:22;:::i;:::-;480:20431;;;;;;;;;;;;;;-1:-1:-1;480:20431:17;;-1:-1:-1;;480:20431:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3457:52;480:20431;;3457:52;480:20431;;;;;;:::i;:::-;;692:84;716:4;480:20431;700:12;480:20431;;;;;;700:20;692:84;:::i;:::-;-1:-1:-1;480:20431:17;3282:25;;:34;:25;;;;480:20431;;3282:11;480:20431;;;;;;;3282:25;480:20431;;-1:-1:-1;;;;;;480:20431:17;-1:-1:-1;;;;;480:20431:17;;;;;;;;;;3282:34;3326:25;716:4;3326:25;;480:20431;;3282:11;480:20431;;;;;;;3326:25;:31;480:20431;;3376:25;:30;:25;;480:20431;;3282:11;480:20431;;;;;;;3376:25;:30;480:20431;:::i;:::-;3424:17;-1:-1:-1;480:20431:17;3424:17;:::i;:::-;-1:-1:-1;480:20431:17;;;-1:-1:-1;;;;;480:20431:17;;;;;;;;;;;3457:52;:::i;:::-;;;;480:20431;;;3559:10;480:20431;3548:22;;;480:20431;;;3548:22;;-1:-1:-1;;;480:20431:17;3524:51;;480:20431;3548:22;;480:20431;3548:22;:::i;3524:51::-;3538:33;;;8485:12;;;;;:::i;:::-;;480:20431;;;;;;;;;;;;;3520:255;3662:4;3647:20;;:75;;;;3520:255;3643:132;;3520:255;3643:132;8485:12;;;:::i;:::-;;3520:255;;3647:75;480:20431;;;3559:10;480:20431;3695:22;;480:20431;;;3671:51;;-1:-1:-1;3695:22:17;480:20431;;3695:22;;3559:10;480:20431;;;;3695:22;;;;;;;;;:::i;:::-;480:20431;3685:33;;3671:51;:::i;:::-;3647:75;;;480:20431;;;;;;;-1:-1:-1;;480:20431:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;480:20431:17;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;-1:-1:-1;;;;;480:20431:17;;;;;;;;;;;;;-1:-1:-1;;480:20431:17;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;480:20431:17;;2316:34;480:20431;;20112:12;480:20431;;;;;;;20111:13;:33;;;;480:20431;20103:76;;;:::i;:::-;20189:19;20204:4;480:20431;;20112:12;480:20431;;;20112:12;480:20431;;20189:19;20218;480:20431;;;20112:12;480:20431;;;20112:12;480:20431;;20218:19;480:20431;;;-1:-1:-1;;;;;480:20431:17;;;;20273:32;;480:20431;;;20273:32;480:20431;20273:32;;480:20431;;;;20273:32;;480:20431;;20273:32;;;;;;:::i;:::-;480:20431;20263:43;;20316:11;:15;:11;;480:20431;;716:4;480:20431;;;;;;;20316:11;:15;480:20431;;;;:::i;:::-;;;;20348:11;;480:20431;;716:4;480:20431;;;;;;;20348:11;480:20431;:::i;:::-;20384:23;:11;;;480:20431;;716:4;480:20431;;;;;;;20384:11;:19;20204:4;480:20431;;;20384:23;20204:4;480:20431;;20316:15;480:20431;;20417:28;:17;480:20431;7638:35;:::i;20417:28::-;20460:20;-1:-1:-1;20460:20:17;;480:20431;20111:33;-1:-1:-1;20752:4:17;20843:36;20895:7;20111:33;;480:20431;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;480:20431:17;;;;;;;-1:-1:-1;480:20431:17;;;;;;;;;;;;;;16502:24;;;480:20431;16536:24;;;480:20431;;;;;;;;;;;16639:21;;;;480:20431;-1:-1:-1;;;;;480:20431:17;;;;;;16607:22;;;;480:20431;;;;;;;;;16570:27;480:20431;:::i;:::-;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;480:20431:17;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;480:20431:17;;;;;;-1:-1:-1;480:20431:17;4896:5;480:20431;;;;;-1:-1:-1;480:20431:17;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;-1:-1:-1;480:20431:17;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;480:20431:17;;-1:-1:-1;480:20431:17;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;480:20431:17;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;480:20431:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;480:20431:17;;;;;;:::o;:::-;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;480:20431:17;;-1:-1:-1;480:20431:17;;-1:-1:-1;480:20431:17;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;480:20431:17;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;480:20431:17;;-1:-1:-1;480:20431:17;;;-1:-1:-1;480:20431:17;:::o;:::-;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;657:137;8385:1560;657:137;692:84;716:4;480:20431;700:12;480:20431;;;;;;700:20;692:84;:::i;:::-;8385:1560;:::i;480:20431::-;;;;:::o;:::-;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;480:20431:17;;;;-1:-1:-1;480:20431:17;;-1:-1:-1;480:20431:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;480:20431:17;;;-1:-1:-1;;;480:20431:17;;;;;;;;-1:-1:-1;480:20431:17;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;480:20431:17;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;480:20431:17;;;;-1:-1:-1;480:20431:17;;;-1:-1:-1;480:20431:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8385:1560::-;8513:73;8527:15;480:20431;8521:21;;8513:73;:::i;:::-;8596:63;8604:26;8605:25;:11;:16;;480:20431;;3282:11;480:20431;;;;;;;8605:16;:25;480:20431;;;;;;;8605:25;8604:26;;480:20431;8604:26;8596:63;:::i;:::-;8673:19;:16;;480:20431;;3282:11;480:20431;;;;;;;8673:16;480:20431;-1:-1:-1;;;;;480:20431:17;;;8673:19;-1:-1:-1;;;;;480:20431:17;;;;8704:4;8673:36;8704:4;;480:20431;;;8768:10;8757:22;;;480:20431;;;8725:99;;8733:51;;480:20431;8757:22;;480:20431;;;;8757:22;480:20431;8733:51;8725:99;:::i;:::-;480:20431;8984:23;480:20431;;8984:23;;;480:20431;716:4;480:20431;;;;;;8984:23;;;;9054:32;8605:11;9054:16;;480:20431;;3282:11;480:20431;;;;;;;9054:16;:25;480:20431;;-1:-1:-1;;480:20431:17;9034:4;480:20431;;;;9054:32;8527:15;9177:16;:19;:16;;480:20431;;3282:11;480:20431;;;;;;;9177:19;480:20431;;9209:16;;480:20431;;3282:11;480:20431;;;;;;;9209:16;:22;480:20431;9234:21;:16;;480:20431;;3282:11;480:20431;;;;;;;9234:16;:21;480:20431;;;;;;;:::i;:::-;9177:79;;;;;;:::i;:::-;-1:-1:-1;9271:572:17;;;9302:32;8605:11;9302:16;;480:20431;;3282:11;480:20431;;;;;;;9302:16;:25;480:20431;;-1:-1:-1;;480:20431:17;;;;;;9302:32;9413:19;:16;;480:20431;;3282:11;480:20431;;;;;;;9413:19;9454:16;9358:179;480:20431;9454:16;;480:20431;;3282:11;480:20431;;;;;;;9454:16;:22;480:20431;9498:16;9234:21;9498:16;;480:20431;;3282:11;480:20431;;;;;;;9498:16;:21;480:20431;9358:179;480:20431;;;;;;9358:179;;;:::i;:::-;;;;480:20431;9556:11;:::o;9271:572::-;9673:19;:16;;480:20431;;3282:11;480:20431;;;;;;;9673:19;9714:16;9611:186;480:20431;9714:16;;480:20431;;3282:11;480:20431;;;;;;;9714:16;:22;480:20431;9758:16;9234:21;9758:16;;480:20431;;3282:11;480:20431;;;;;;;9758:16;:21;480:20431;9611:186;480:20431;;;;;;9611:186;;;:::i;:::-;;;;8527:15;9816:12;:::o;8670:299::-;480:20431;;;8906:10;8895:22;;;480:20431;;;8863:95;;8871:51;;480:20431;8895:22;;480:20431;;;;8895:22;480:20431;8895:22;480:20431;8885:33;;8871:51;:::i;:::-;8863:95;:::i;:::-;8670:299;;8385:1560;8513:73;8527:15;480:20431;8521:21;;8513:73;:::i;:::-;8596:63;8604:26;8605:25;:11;:16;;480:20431;;3282:11;480:20431;;;;;;;8596:63;480:20431;8673:19;:16;;480:20431;;3282:11;480:20431;;;;;;;8673:19;480:20431;;;;;;8704:4;;;480:20431;;8673:36;8670:299;8704:4;;;480:20431;;;8768:10;8757:22;;;480:20431;;;8725:99;;8733:51;;480:20431;8757:22;;480:20431;;;;8757:22;480:20431;8725:99;480:20431;;;;;;;;;8984:23;;480:20431;;8984:23;480:20431;;9022:16;9034:4;;9054:32;8605:11;9054:16;;480:20431;;3282:11;480:20431;;;;;;;9018:899;9873:33;:16;;;8605:11;9873:16;480:20431;;3282:11;480:20431;;;;;;;9873:16;:25;480:20431;;-1:-1:-1;;480:20431:17;;;;9873:33;8527:15;8385:1560;:::o;8670:299::-;480:20431;;;8906:10;8895:22;;;480:20431;;;8863:95;;8871:51;;480:20431;8895:22;;480:20431;;;;8895:22;480:20431;8863:95;8670:299;;480:20431;;;;:::o;:::-;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;480:20431:17;;;;;;;;-1:-1:-1;;480:20431:17;;;;;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;480:20431:17;;-1:-1:-1;480:20431:17;;-1:-1:-1;480:20431:17;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;480:20431:17;;;-1:-1:-1;480:20431:17;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;480:20431:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;657:137;;;;;;692:84;716:4;480:20431;700:12;480:20431;;;;;;700:20;692:84;:::i;:::-;1258:4;1236:10;:27;:82;;;;657:137;1228:154;;;:::i;:::-;-1:-1:-1;;;;;480:20431:17;;;1258:4;12778:24;;12774:168;;657:137;480:20431;;;-1:-1:-1;;;;;480:20431:17;;12980:27;;;480:20431;;;;;;;;;12980:27;480:20431;;;;12980:27;480:20431;12980:27;480:20431;12970:38;;13018:16;;;;;;480:20431;;13018:7;480:20431;;;;;;;13018:16;480:20431;13059:16;716:4;13059:16;;480:20431;;13018:7;480:20431;;;;;;;13059:16;:23;480:20431;;13102:16;:26;:16;;480:20431;;13018:7;480:20431;;;;;;;;;13151:16;13018:7;13151:16;;480:20431;;13018:7;480:20431;;;;;;;;;13190:16;:20;:16;;480:20431;;13018:7;480:20431;;;;;;;;13232:16;:34;:23;;:16;;480:20431;;13018:7;480:20431;;;;;;;13232:23;-1:-1:-1;;;;;480:20431:17;;;13232:34;;;;13282:22;13385:70;13282:22;13332:33;13385:70;13282:22;:36;:22;;;480:20431;;13190:20;480:20431;;;;;;;13282:36;13232:23;13332:16;;480:20431;;13018:7;480:20431;;;;;;;13332:16;:23;480:20431;;-1:-1:-1;;;;;;480:20431:17;-1:-1:-1;;;;;480:20431:17;;;;;;;;;;13332:33;480:20431;;13385:70;;;;;:::i;:::-;;;;657:137;:::o;13228:354::-;480:20431;13499:72;480:20431;13499:72;480:20431;;;13499:72;;;;;:::i;12774:168::-;480:20431;;-1:-1:-1;;;12826:87:17;;12818:113;;12826:87;480:20431;;12826:87;1258:4;;;;12826:87;;;;:::i;:::-;;;;;;;;;;;12774:168;480:20431;12826:87;;;12774:168;12818:113;;:::i;:::-;12774:168;;12826:87;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;1236:82;480:20431;1228:154;1267:51;480:20431;;1291:22;;;1236:10;;480:20431;;1291:22;;;;;;:::i;1267:51::-;1236:82;;;;480:20431;;;;:::o;:::-;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;-1:-1:-1;480:20431:17;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;16825:463::-;-1:-1:-1;480:20431:17;716:4;480:20431;;;;-1:-1:-1;480:20431:17;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;16994:12;16990:30;;-1:-1:-1;;17036:24:17;716:4;;;17031:228;17269:12;;;-1:-1:-1;16825:463:17;:::o;17101:17::-;17080:12;;480:20431;;;17062:37;;;;;17152:29;;;;;;:::i;:::-;480:20431;17200:12;:35;;;;17101:17;17196:52;;17101:17;;;:::i;:::-;17036:24;;;17196:52;17237:11;;;;:::o;17200:35::-;;;17062:37;;;;16990:30;17008:12;;-1:-1:-1;17008:12:17;:::o;16825:463::-;-1:-1:-1;480:20431:17;16969:5;480:20431;;;;-1:-1:-1;480:20431:17;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;16994:12;16990:30;;-1:-1:-1;;17036:24:17;16969:5;;;17269:12;;;-1:-1:-1;16825:463:17;:::o;17101:17::-;17080:12;;480:20431;;;17062:37;;;;;17152:29;;;;;:::i;:::-;480:20431;17200:12;;;:35;;;;;17101:17;17196:52;;;17101:17;;;:::i;:::-;17036:24;;;17200:35;1316:1;17216:19;;;17200:35;;;16825:463;-1:-1:-1;480:20431:17;16969:5;480:20431;;;;-1:-1:-1;480:20431:17;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;3376:30;480:20431;;;;;;;;;16994:12;16990:30;;-1:-1:-1;;17036:24:17;16969:5;;;17031:228;17269:12;;;;-1:-1:-1;16825:463:17;:::o;17101:17::-;17080:12;;480:20431;;;17062:37;;;;;17152:29;;;;;:::i;:::-;480:20431;17200:12;;;;:35;;;;;17101:17;17196:52;;;;17101:17;;;:::i;:::-;17036:24;;;17196:52;17237:11;;;;;:::o;17200:35::-;17216:19;;-1:-1:-1;17200:35:17;;;;17062:37;;;;16825:463;-1:-1:-1;480:20431:17;16969:5;480:20431;;;;-1:-1:-1;480:20431:17;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;8920:1;480:20431;;;;;;;;;16994:12;16990:30;;-1:-1:-1;;17036:24:17;16969:5;;;17269:12;;;;-1:-1:-1;16825:463:17;:::o;17101:17::-;17080:12;;480:20431;;;17062:37;;;;;17152:29;;;;;:::i;:::-;480:20431;17200:12;;;;:35;;;;;17101:17;17196:52;;;;17101:17;;;:::i;:::-;17036:24;;;17200:35;17216:19;;-1:-1:-1;17200:35:17;;;;16825:463;-1:-1:-1;480:20431:17;16969:5;480:20431;;;;;-1:-1:-1;480:20431:17;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;16994:12;16990:30;;-1:-1:-1;;17036:24:17;16969:5;;;17269:12;;;;-1:-1:-1;16825:463:17;:::o;17101:17::-;17080:12;;480:20431;;;17062:37;;;;;17152:29;;;;;:::i;:::-;480:20431;17200:12;;;;:35;;;;;17101:17;17196:52;;;;17101:17;;;:::i;:::-;17036:24;;;17200:35;17216:19;;-1:-1:-1;17200:35:17;;;;17865:934;;18704:28;17865:934;;18410:38;17865:934;480:20431;;;18100:39;;;;;;480:20431;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18100:39;480:20431;18100:39;480:20431;;18100:39;;;;;;;;:::i;:::-;480:20431;18090:50;;480:20431;;18274:62;;;18100:39;18274:62;;;;480:20431;;;;;;;;;;;;18274:62;;;;;;;;;:::i;:::-;480:20431;18264:73;;18410:38;;:::i;:::-;480:20431;;;-1:-1:-1;;;;;480:20431:17;;;18100:39;18532:21;;480:20431;;;18532:21;;;480:20431;;;;18532:21;480:20431;18704:28;18700:70;;-1:-1:-1;17865:934:17;:::o;18700:70::-;480:20431;18748:11;:::o;19050:719::-;;-1:-1:-1;480:20431:17;19291:2;480:20431;;19277:16;19273:64;;-1:-1:-1;19459:143:17;;;;480:20431;19459:143;480:20431;19459:143;;;;;;;;;;;;;;19621:2;19616:7;;19612:46;;19050:719;19459:143;480:20431;;;;;;;;;19459:143;480:20431;;;19459:143;480:20431;;;19695:31;;;;;;;;;19050:719;-1:-1:-1;19695:31:17;19050:719;:::o;19695:31::-;;;:::i;:::-;;;19612:46;19621:2;480:20431;;;;;19612:46;480:20431;;;:::i;:::-;19612:46;;19273:64;19309:17;;;:::o;480:20431::-;;;;:::o;:::-;;;-1:-1:-1;;;480:20431:17;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "addClaim(uint256,uint256,address,bytes,bytes,string)": "b1a34e0d",
        "addKey(bytes32,uint256,uint256)": "1d381240",
        "approve(uint256,bool)": "747442d3",
        "execute(address,uint256,bytes)": "b61d27f6",
        "getClaim(bytes32)": "c9100bcb",
        "getClaimIdsByTopic(uint256)": "80e9e9e1",
        "getKey(bytes32)": "12aaac70",
        "getKeyPurposes(bytes32)": "fb307b34",
        "getKeysByPurpose(uint256)": "9010f726",
        "getRecoveredAddress(bytes,bytes32)": "c3b129e3",
        "initialize(address)": "c4d66de8",
        "isClaimValid(address,uint256,bytes,bytes)": "c0969a6e",
        "keyHasPurpose(bytes32,uint256)": "d202158d",
        "removeClaim(bytes32)": "4eee424a",
        "removeKey(bytes32,uint256)": "53d413c5",
        "version()": "54fd4d50"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialManagementKey\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLibrary\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"Approved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"claimId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"ClaimRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Executed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"ExecutionRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purpose\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"}],\"name\":\"KeyRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"addClaim\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"claimRequestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"}],\"name\":\"addKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_approve\",\"type\":\"bool\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"executionId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"topic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"scheme\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_topic\",\"type\":\"uint256\"}],\"name\":\"getClaimIdsByTopic\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"claimIds\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKey\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"purposes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"keyType\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"getKeyPurposes\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_purposes\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"getKeysByPurpose\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"dataHash\",\"type\":\"bytes32\"}],\"name\":\"getRecoveredAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialManagementKey\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIdentity\",\"name\":\"_identity\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"isClaimValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"claimValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"keyHasPurpose\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_claimId\",\"type\":\"bytes32\"}],\"name\":\"removeClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_purpose\",\"type\":\"uint256\"}],\"name\":\"removeKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the `IERC734` \\\"KeyHolder\\\" and the `IERC735` \\\"ClaimHolder\\\" interfaces into a common Identity Contract. This implementation has a separate contract were it declares all storage, allowing for it to be used as an upgradable logic contract.\",\"kind\":\"dev\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"details\":\"See {IERC735-addClaim}.\",\"params\":{\"_data\":\"The hash of the claim data, sitting in another location, a bit-mask, call data, or actual data based on the claim scheme.\",\"_issuer\":\"The issuers identity contract address, or the address used to sign the above signature.\",\"_scheme\":\"The scheme with which this claim SHOULD be verified or how it should be processed.\",\"_signature\":\"Signature which is the proof that the claim issuer issued a claim of topic for this identity. it MUST be a signed message of the following structure: keccak256(abi.encode(address identityHolder_address, uint256 _ topic, bytes data))\",\"_topic\":\"The type of claim\",\"_uri\":\"The location of the claim, this can be HTTP links, swarm hashes, IPFS hashes, and such.\"},\"returns\":{\"claimRequestId\":\"Returns claimRequestId: COULD be send to the approve function, to approve or reject this claim. triggers ClaimAdded event.\"}},\"addKey(bytes32,uint256,uint256)\":{\"params\":{\"_key\":\"keccak256 representation of an ethereum address\",\"_purpose\":\"a uint256 specifying the key type, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION\",\"_type\":\"type of key used, which would be a uint256 for different key types. e.g. 1 = ECDSA, 2 = RSA, etc.\"},\"returns\":{\"success\":\"Returns TRUE if the addition was successful and FALSE if not\"}},\"approve(uint256,bool)\":{\"details\":\"See {IERC734-approve}.\"},\"constructor\":{\"params\":{\"_isLibrary\":\"boolean value stating if the contract is library or not calls __Identity_init if contract is not library\",\"initialManagementKey\":\"the address of the management key at deployment\"}},\"execute(address,uint256,bytes)\":{\"details\":\"See {IERC734-execute}.\",\"returns\":{\"executionId\":\"to use in the approve function, to approve or reject this execution.\"}},\"getClaim(bytes32)\":{\"details\":\"See {IERC735-getClaim}.\",\"params\":{\"_claimId\":\"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\"},\"returns\":{\"data\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"issuer\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"scheme\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"signature\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"topic\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\",\"uri\":\"Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .\"}},\"getClaimIdsByTopic(uint256)\":{\"details\":\"See {IERC735-getClaimIdsByTopic}.\",\"params\":{\"_topic\":\"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\"},\"returns\":{\"claimIds\":\"Returns an array of claim IDs by topic.\"}},\"getKey(bytes32)\":{\"details\":\"See {IERC734-getKey}.\",\"params\":{\"_key\":\"The public key.  for non-hex and long keys, its the Keccak256 hash of the key\"},\"returns\":{\"key\":\"Returns the full key data, if present in the identity.\",\"keyType\":\"Returns the full key data, if present in the identity.\",\"purposes\":\"Returns the full key data, if present in the identity.\"}},\"getKeyPurposes(bytes32)\":{\"details\":\"See {IERC734-getKeyPurposes}.\",\"params\":{\"_key\":\"The public key.  for non-hex and long keys, its the Keccak256 hash of the key\"},\"returns\":{\"_purposes\":\"Returns the purposes of the specified key\"}},\"getKeysByPurpose(uint256)\":{\"details\":\"See {IERC734-getKeysByPurpose}.\",\"params\":{\"_purpose\":\"a uint256[] Array of the key types, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION\"},\"returns\":{\"keys\":\"Returns an array of public key bytes32 hold by this identity and having the specified purpose\"}},\"getRecoveredAddress(bytes,bytes32)\":{\"details\":\"returns the address that signed the given data\",\"params\":{\"dataHash\":\"the data that was signed returns the address that signed dataHash and created the signature sig\",\"sig\":\"the signature of the data\"}},\"initialize(address)\":{\"params\":{\"initialManagementKey\":\"The ethereum address to be set as the management key of the ONCHAINID.\"}},\"isClaimValid(address,uint256,bytes,bytes)\":{\"details\":\"Checks if a claim is valid. Claims issued by the identity are self-attested claims. They do not have a built-in revocation mechanism and are considered valid as long as their signature is valid and they are still stored by the identity contract.\",\"params\":{\"_identity\":\"the identity contract related to the claim\",\"claimTopic\":\"the claim topic of the claim\",\"data\":\"the data field of the claim\",\"sig\":\"the signature of the claim\"},\"returns\":{\"claimValid\":\"true if the claim is valid, false otherwise\"}},\"keyHasPurpose(bytes32,uint256)\":{\"details\":\"See {IERC734-keyHasPurpose}.\"},\"removeClaim(bytes32)\":{\"details\":\"See {IERC735-removeClaim}.\",\"params\":{\"_claimId\":\"The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))\"},\"returns\":{\"success\":\"Returns TRUE when the claim was removed. triggers ClaimRemoved event\"}},\"removeKey(bytes32,uint256)\":{\"details\":\"See {IERC734-removeKey}.\"},\"version()\":{\"details\":\"Returns the string of the current version.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addClaim(uint256,uint256,address,bytes,bytes,string)\":{\"notice\":\"Implementation of the addClaim function from the ERC-735 standard  Require that the msg.sender has claim signer key.\"},\"addKey(bytes32,uint256,uint256)\":{\"notice\":\"implementation of the addKey function of the ERC-734 standard Adds a _key to the identity. The _purpose specifies the purpose of key. Initially we propose four purposes: 1: MANAGEMENT keys, which can manage the identity 2: ACTION keys, which perform actions in this identities name (signing, logins, transactions, etc.) 3: CLAIM signer keys, used to sign claims on other identities which need to be revokable. 4: ENCRYPTION keys, used to encrypt data e.g. hold in claims. MUST only be done by keys of purpose 1, or the identity itself. If its the identity itself, the approval process will determine its approval.\"},\"approve(uint256,bool)\":{\"notice\":\"Approves an execution.  If the sender is an ACTION key and the destination address is not the identity contract itself, then the  approval is authorized and the operation would be performed.  If the destination address is the identity itself, then the execution would be authorized and performed only  if the sender is a MANAGEMENT key.\"},\"constructor\":{\"notice\":\"constructor of the Identity contract\"},\"execute(address,uint256,bytes)\":{\"notice\":\"Passes an execution instruction to the keymanager. If the sender is an ACTION key and the destination address is not the identity contract itself, then the execution is immediately approved and performed. If the destination address is the identity itself, then the execution would be performed immediately only if the sender is a MANAGEMENT key. Otherwise the execution request must be approved via the `approve` method.\"},\"getClaim(bytes32)\":{\"notice\":\"Implementation of the getClaim function from the ERC-735 standard.\"},\"getClaimIdsByTopic(uint256)\":{\"notice\":\"Implementation of the getClaimIdsByTopic function from the ERC-735 standard. used to get all the claims from the specified topic\"},\"getKey(bytes32)\":{\"notice\":\"Implementation of the getKey function from the ERC-734 standard\"},\"getKeyPurposes(bytes32)\":{\"notice\":\"gets the purposes of a key\"},\"getKeysByPurpose(uint256)\":{\"notice\":\"gets all the keys with a specific purpose from an identity\"},\"initialize(address)\":{\"notice\":\"When using this contract as an implementation for a proxy, call this initializer with a delegatecall.\"},\"keyHasPurpose(bytes32,uint256)\":{\"notice\":\"Returns true if the key has MANAGEMENT purpose or the specified purpose.\"},\"removeClaim(bytes32)\":{\"notice\":\"Implementation of the removeClaim function from the ERC-735 standard Require that the msg.sender has management key. Can only be removed by the claim issuer, or the claim holder itself.\"},\"removeKey(bytes32,uint256)\":{\"notice\":\"Remove the purpose from a key.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/solidity/contracts/Identity.sol\":\"Identity\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchain-id/=lib/ERC-3643/node_modules/@onchain-id/\",\":@openzeppelin/=lib/ERC-3643/node_modules/@openzeppelin/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=lib/ERC-3643/node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/ERC-3643/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity/=lib/solidity/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/solidity/contracts/Identity.sol\":{\"keccak256\":\"0xd59a2731074c13d973971645c5db2cb84e0714bef38b441769ebf152dd6acc9c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://35598c0ae05ec82ed132006566ec82e900ec3571ebc4a2ce76f4b58b7ab7ced7\",\"dweb:/ipfs/QmZch8aNV5knbcf7YExezDXDjfXT5u5JC1Pu8Gdc1M67pG\"]},\"lib/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0x3a12f842236b7ff3579bbd245fb0b243f77e98cd721ea165d679324a099af20d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a70c3c9183bb995a8fe01e1438c5cceab748f4d20b2da501e6232f2e62835240\",\"dweb:/ipfs/QmafwCmChS3jFUcZVU5SujANLfu1uX13e1HaMokc8ga6Wz\"]},\"lib/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819\",\"dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd\"]},\"lib/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523\",\"dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9\"]},\"lib/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4\",\"dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN\"]},\"lib/solidity/contracts/storage/Storage.sol\":{\"keccak256\":\"0x5656735571a3d856fd1aa3f3ca21f1053c338f052f517e7aaa72d9b65e967e5c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f26768949c1c9aa8cb0f3479c7f4d81dd65215be51f95b779675a636a45b0af\",\"dweb:/ipfs/QmT1GSegmoSJLTsLjAQqERCgZvPGoSyiMLCR7mLiDJVHge\"]},\"lib/solidity/contracts/storage/Structs.sol\":{\"keccak256\":\"0xe0058f3c22e8347e96387def25b6027b440273688b9f2a4cec113928b1cbf5c9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a49321f35e3110069426c720a093356f75705673ff0a281b60142c3d5bd199f9\",\"dweb:/ipfs/QmNMey1QZUw9QyG2NmLLTTv4coshP2dU6uhSTCUNyqKKL4\"]},\"lib/solidity/contracts/version/Version.sol\":{\"keccak256\":\"0xfb08360ef0cdbdfeb29e616735d476f0b066c9866003da402e3f6af084dd4cfb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9c0744a6b47e7d8dd8a00a7e2f3684c6cc7923558c7d9afd8700425f4725cfca\",\"dweb:/ipfs/QmfPLZ2zbBFUnCXY2rBVbkKsJneQKeh2CCykhzDbyt5mCp\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.17+commit.8df45f5f"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "initialManagementKey",
                            "type": "address"
                        },
                        {
                            "internalType": "bool",
                            "name": "_isLibrary",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "executionId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "bool",
                            "name": "approved",
                            "type": "bool",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Approved",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "claimId",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "topic",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "scheme",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "address",
                            "name": "issuer",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes",
                            "name": "signature",
                            "type": "bytes",
                            "indexed": false
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes",
                            "indexed": false
                        },
                        {
                            "internalType": "string",
                            "name": "uri",
                            "type": "string",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ClaimAdded",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "claimId",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "topic",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "scheme",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "address",
                            "name": "issuer",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes",
                            "name": "signature",
                            "type": "bytes",
                            "indexed": false
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes",
                            "indexed": false
                        },
                        {
                            "internalType": "string",
                            "name": "uri",
                            "type": "string",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ClaimChanged",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "claimId",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "topic",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "scheme",
                            "type": "uint256",
                            "indexed": false
                        },
                        {
                            "internalType": "address",
                            "name": "issuer",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes",
                            "name": "signature",
                            "type": "bytes",
                            "indexed": false
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes",
                            "indexed": false
                        },
                        {
                            "internalType": "string",
                            "name": "uri",
                            "type": "string",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ClaimRemoved",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "executionId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Executed",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "executionId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ExecutionFailed",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "executionId",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "to",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "ExecutionRequested",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "key",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "purpose",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "keyType",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "KeyAdded",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "key",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "purpose",
                            "type": "uint256",
                            "indexed": true
                        },
                        {
                            "internalType": "uint256",
                            "name": "keyType",
                            "type": "uint256",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "KeyRemoved",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_topic",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_scheme",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "_issuer",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes",
                            "name": "_signature",
                            "type": "bytes"
                        },
                        {
                            "internalType": "bytes",
                            "name": "_data",
                            "type": "bytes"
                        },
                        {
                            "internalType": "string",
                            "name": "_uri",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "addClaim",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "claimRequestId",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_key",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_purpose",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_type",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "addKey",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "success",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_id",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bool",
                            "name": "_approve",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "approve",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "success",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_to",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_value",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "_data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "execute",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "executionId",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_claimId",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getClaim",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "topic",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "scheme",
                            "type": "uint256"
                        },
                        {
                            "internalType": "address",
                            "name": "issuer",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes",
                            "name": "signature",
                            "type": "bytes"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        },
                        {
                            "internalType": "string",
                            "name": "uri",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_topic",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getClaimIdsByTopic",
                    "outputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "claimIds",
                            "type": "bytes32[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_key",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getKey",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "purposes",
                            "type": "uint256[]"
                        },
                        {
                            "internalType": "uint256",
                            "name": "keyType",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "key",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_key",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getKeyPurposes",
                    "outputs": [
                        {
                            "internalType": "uint256[]",
                            "name": "_purposes",
                            "type": "uint256[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "_purpose",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getKeysByPurpose",
                    "outputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "keys",
                            "type": "bytes32[]"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes",
                            "name": "sig",
                            "type": "bytes"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "dataHash",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "getRecoveredAddress",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "addr",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "initialManagementKey",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "initialize"
                },
                {
                    "inputs": [
                        {
                            "internalType": "contract IIdentity",
                            "name": "_identity",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "claimTopic",
                            "type": "uint256"
                        },
                        {
                            "internalType": "bytes",
                            "name": "sig",
                            "type": "bytes"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isClaimValid",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "claimValid",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_key",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_purpose",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "keyHasPurpose",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "result",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_claimId",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "removeClaim",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "success",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "_key",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint256",
                            "name": "_purpose",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "removeKey",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "success",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "pure",
                    "type": "function",
                    "name": "version",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "addClaim(uint256,uint256,address,bytes,bytes,string)": {
                        "details": "See {IERC735-addClaim}.",
                        "params": {
                            "_data": "The hash of the claim data, sitting in another location, a bit-mask, call data, or actual data based on the claim scheme.",
                            "_issuer": "The issuers identity contract address, or the address used to sign the above signature.",
                            "_scheme": "The scheme with which this claim SHOULD be verified or how it should be processed.",
                            "_signature": "Signature which is the proof that the claim issuer issued a claim of topic for this identity. it MUST be a signed message of the following structure: keccak256(abi.encode(address identityHolder_address, uint256 _ topic, bytes data))",
                            "_topic": "The type of claim",
                            "_uri": "The location of the claim, this can be HTTP links, swarm hashes, IPFS hashes, and such."
                        },
                        "returns": {
                            "claimRequestId": "Returns claimRequestId: COULD be send to the approve function, to approve or reject this claim. triggers ClaimAdded event."
                        }
                    },
                    "addKey(bytes32,uint256,uint256)": {
                        "params": {
                            "_key": "keccak256 representation of an ethereum address",
                            "_purpose": "a uint256 specifying the key type, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION",
                            "_type": "type of key used, which would be a uint256 for different key types. e.g. 1 = ECDSA, 2 = RSA, etc."
                        },
                        "returns": {
                            "success": "Returns TRUE if the addition was successful and FALSE if not"
                        }
                    },
                    "approve(uint256,bool)": {
                        "details": "See {IERC734-approve}."
                    },
                    "constructor": {
                        "params": {
                            "_isLibrary": "boolean value stating if the contract is library or not calls __Identity_init if contract is not library",
                            "initialManagementKey": "the address of the management key at deployment"
                        }
                    },
                    "execute(address,uint256,bytes)": {
                        "details": "See {IERC734-execute}.",
                        "returns": {
                            "executionId": "to use in the approve function, to approve or reject this execution."
                        }
                    },
                    "getClaim(bytes32)": {
                        "details": "See {IERC735-getClaim}.",
                        "params": {
                            "_claimId": "The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))"
                        },
                        "returns": {
                            "data": "Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .",
                            "issuer": "Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .",
                            "scheme": "Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .",
                            "signature": "Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .",
                            "topic": "Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) .",
                            "uri": "Returns all the parameters of the claim for the specified _claimId (topic, scheme, signature, issuer, data, uri) ."
                        }
                    },
                    "getClaimIdsByTopic(uint256)": {
                        "details": "See {IERC735-getClaimIdsByTopic}.",
                        "params": {
                            "_topic": "The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))"
                        },
                        "returns": {
                            "claimIds": "Returns an array of claim IDs by topic."
                        }
                    },
                    "getKey(bytes32)": {
                        "details": "See {IERC734-getKey}.",
                        "params": {
                            "_key": "The public key.  for non-hex and long keys, its the Keccak256 hash of the key"
                        },
                        "returns": {
                            "key": "Returns the full key data, if present in the identity.",
                            "keyType": "Returns the full key data, if present in the identity.",
                            "purposes": "Returns the full key data, if present in the identity."
                        }
                    },
                    "getKeyPurposes(bytes32)": {
                        "details": "See {IERC734-getKeyPurposes}.",
                        "params": {
                            "_key": "The public key.  for non-hex and long keys, its the Keccak256 hash of the key"
                        },
                        "returns": {
                            "_purposes": "Returns the purposes of the specified key"
                        }
                    },
                    "getKeysByPurpose(uint256)": {
                        "details": "See {IERC734-getKeysByPurpose}.",
                        "params": {
                            "_purpose": "a uint256[] Array of the key types, like 1 = MANAGEMENT, 2 = ACTION, 3 = CLAIM, 4 = ENCRYPTION"
                        },
                        "returns": {
                            "keys": "Returns an array of public key bytes32 hold by this identity and having the specified purpose"
                        }
                    },
                    "getRecoveredAddress(bytes,bytes32)": {
                        "details": "returns the address that signed the given data",
                        "params": {
                            "dataHash": "the data that was signed returns the address that signed dataHash and created the signature sig",
                            "sig": "the signature of the data"
                        }
                    },
                    "initialize(address)": {
                        "params": {
                            "initialManagementKey": "The ethereum address to be set as the management key of the ONCHAINID."
                        }
                    },
                    "isClaimValid(address,uint256,bytes,bytes)": {
                        "details": "Checks if a claim is valid. Claims issued by the identity are self-attested claims. They do not have a built-in revocation mechanism and are considered valid as long as their signature is valid and they are still stored by the identity contract.",
                        "params": {
                            "_identity": "the identity contract related to the claim",
                            "claimTopic": "the claim topic of the claim",
                            "data": "the data field of the claim",
                            "sig": "the signature of the claim"
                        },
                        "returns": {
                            "claimValid": "true if the claim is valid, false otherwise"
                        }
                    },
                    "keyHasPurpose(bytes32,uint256)": {
                        "details": "See {IERC734-keyHasPurpose}."
                    },
                    "removeClaim(bytes32)": {
                        "details": "See {IERC735-removeClaim}.",
                        "params": {
                            "_claimId": "The identity of the claim i.e. keccak256(abi.encode(_issuer, _topic))"
                        },
                        "returns": {
                            "success": "Returns TRUE when the claim was removed. triggers ClaimRemoved event"
                        }
                    },
                    "removeKey(bytes32,uint256)": {
                        "details": "See {IERC734-removeKey}."
                    },
                    "version()": {
                        "details": "Returns the string of the current version."
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "addClaim(uint256,uint256,address,bytes,bytes,string)": {
                        "notice": "Implementation of the addClaim function from the ERC-735 standard  Require that the msg.sender has claim signer key."
                    },
                    "addKey(bytes32,uint256,uint256)": {
                        "notice": "implementation of the addKey function of the ERC-734 standard Adds a _key to the identity. The _purpose specifies the purpose of key. Initially we propose four purposes: 1: MANAGEMENT keys, which can manage the identity 2: ACTION keys, which perform actions in this identities name (signing, logins, transactions, etc.) 3: CLAIM signer keys, used to sign claims on other identities which need to be revokable. 4: ENCRYPTION keys, used to encrypt data e.g. hold in claims. MUST only be done by keys of purpose 1, or the identity itself. If its the identity itself, the approval process will determine its approval."
                    },
                    "approve(uint256,bool)": {
                        "notice": "Approves an execution.  If the sender is an ACTION key and the destination address is not the identity contract itself, then the  approval is authorized and the operation would be performed.  If the destination address is the identity itself, then the execution would be authorized and performed only  if the sender is a MANAGEMENT key."
                    },
                    "constructor": {
                        "notice": "constructor of the Identity contract"
                    },
                    "execute(address,uint256,bytes)": {
                        "notice": "Passes an execution instruction to the keymanager. If the sender is an ACTION key and the destination address is not the identity contract itself, then the execution is immediately approved and performed. If the destination address is the identity itself, then the execution would be performed immediately only if the sender is a MANAGEMENT key. Otherwise the execution request must be approved via the `approve` method."
                    },
                    "getClaim(bytes32)": {
                        "notice": "Implementation of the getClaim function from the ERC-735 standard."
                    },
                    "getClaimIdsByTopic(uint256)": {
                        "notice": "Implementation of the getClaimIdsByTopic function from the ERC-735 standard. used to get all the claims from the specified topic"
                    },
                    "getKey(bytes32)": {
                        "notice": "Implementation of the getKey function from the ERC-734 standard"
                    },
                    "getKeyPurposes(bytes32)": {
                        "notice": "gets the purposes of a key"
                    },
                    "getKeysByPurpose(uint256)": {
                        "notice": "gets all the keys with a specific purpose from an identity"
                    },
                    "initialize(address)": {
                        "notice": "When using this contract as an implementation for a proxy, call this initializer with a delegatecall."
                    },
                    "keyHasPurpose(bytes32,uint256)": {
                        "notice": "Returns true if the key has MANAGEMENT purpose or the specified purpose."
                    },
                    "removeClaim(bytes32)": {
                        "notice": "Implementation of the removeClaim function from the ERC-735 standard Require that the msg.sender has management key. Can only be removed by the claim issuer, or the claim holder itself."
                    },
                    "removeKey(bytes32,uint256)": {
                        "notice": "Remove the purpose from a key."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@onchain-id/=lib/ERC-3643/node_modules/@onchain-id/",
                "@openzeppelin/=lib/ERC-3643/node_modules/@openzeppelin/",
                "ERC-3643/=lib/ERC-3643/contracts/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "eth-gas-reporter/=lib/ERC-3643/node_modules/eth-gas-reporter/",
                "forge-std/=lib/forge-std/src/",
                "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
                "hardhat/=lib/ERC-3643/node_modules/hardhat/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/",
                "solidity/=lib/solidity/contracts/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "lib/solidity/contracts/Identity.sol": "Identity"
            },
            "evmVersion": "london",
            "libraries": {},
            "viaIR": true
        },
        "sources": {
            "lib/solidity/contracts/Identity.sol": {
                "keccak256": "0xd59a2731074c13d973971645c5db2cb84e0714bef38b441769ebf152dd6acc9c",
                "urls": [
                    "bzz-raw://35598c0ae05ec82ed132006566ec82e900ec3571ebc4a2ce76f4b58b7ab7ced7",
                    "dweb:/ipfs/QmZch8aNV5knbcf7YExezDXDjfXT5u5JC1Pu8Gdc1M67pG"
                ],
                "license": "GPL-3.0"
            },
            "lib/solidity/contracts/interface/IClaimIssuer.sol": {
                "keccak256": "0x3a12f842236b7ff3579bbd245fb0b243f77e98cd721ea165d679324a099af20d",
                "urls": [
                    "bzz-raw://a70c3c9183bb995a8fe01e1438c5cceab748f4d20b2da501e6232f2e62835240",
                    "dweb:/ipfs/QmafwCmChS3jFUcZVU5SujANLfu1uX13e1HaMokc8ga6Wz"
                ],
                "license": "GPL-3.0"
            },
            "lib/solidity/contracts/interface/IERC734.sol": {
                "keccak256": "0x8c8a5a7951ee25569288c0c6662b59599deec7d0f2fcb74c8f80a8fd9354e8af",
                "urls": [
                    "bzz-raw://f8d9b77d41bcd0f68eac91543b9e162dadb3078e13d558db153307f3ee01f819",
                    "dweb:/ipfs/QmXs6vjAfnXFz1VQxNBGQUv5i2DHr9AeJ9ezG5RQHy4bWd"
                ],
                "license": "GPL-3.0"
            },
            "lib/solidity/contracts/interface/IERC735.sol": {
                "keccak256": "0xaaea6f3ecdc5f30e795e07aacdfc1b177741ef174910e943e96f6de7a8db6efb",
                "urls": [
                    "bzz-raw://ebb12c62267e4f33475cfe554bbc32740b8a1e2a620d88338490fb0dcb0d4523",
                    "dweb:/ipfs/QmTXg9XUuEcTMZBc3FbGRaSekxEv8rE3oyYJQUJ9Zi3qo9"
                ],
                "license": "GPL-3.0"
            },
            "lib/solidity/contracts/interface/IIdentity.sol": {
                "keccak256": "0x206c93ed62a48802edcad87e229f53c74817349a49f5ef21ea4780ab27b39cdf",
                "urls": [
                    "bzz-raw://82a0e205a814739ac45b4d1fc490aa40f5f0da4e9a9f1fb1d998c595850a29c4",
                    "dweb:/ipfs/QmTqc9Z9mGmCPw3v76S2oAFkxjjQXrpgJ5YYzYj5gtbrnN"
                ],
                "license": "GPL-3.0"
            },
            "lib/solidity/contracts/storage/Storage.sol": {
                "keccak256": "0x5656735571a3d856fd1aa3f3ca21f1053c338f052f517e7aaa72d9b65e967e5c",
                "urls": [
                    "bzz-raw://8f26768949c1c9aa8cb0f3479c7f4d81dd65215be51f95b779675a636a45b0af",
                    "dweb:/ipfs/QmT1GSegmoSJLTsLjAQqERCgZvPGoSyiMLCR7mLiDJVHge"
                ],
                "license": "GPL-3.0"
            },
            "lib/solidity/contracts/storage/Structs.sol": {
                "keccak256": "0xe0058f3c22e8347e96387def25b6027b440273688b9f2a4cec113928b1cbf5c9",
                "urls": [
                    "bzz-raw://a49321f35e3110069426c720a093356f75705673ff0a281b60142c3d5bd199f9",
                    "dweb:/ipfs/QmNMey1QZUw9QyG2NmLLTTv4coshP2dU6uhSTCUNyqKKL4"
                ],
                "license": "GPL-3.0"
            },
            "lib/solidity/contracts/version/Version.sol": {
                "keccak256": "0xfb08360ef0cdbdfeb29e616735d476f0b066c9866003da402e3f6af084dd4cfb",
                "urls": [
                    "bzz-raw://9c0744a6b47e7d8dd8a00a7e2f3684c6cc7923558c7d9afd8700425f4725cfca",
                    "dweb:/ipfs/QmfPLZ2zbBFUnCXY2rBVbkKsJneQKeh2CCykhzDbyt5mCp"
                ],
                "license": "GPL-3.0"
            }
        },
        "version": 1
    },
    "id": 17
}