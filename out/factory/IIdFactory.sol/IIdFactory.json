{"abi":[{"type":"function","name":"addTokenFactory","inputs":[{"name":"_factory","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createIdentity","inputs":[{"name":"_wallet","type":"address","internalType":"address"},{"name":"_salt","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"createIdentityWithManagementKeys","inputs":[{"name":"_wallet","type":"address","internalType":"address"},{"name":"_salt","type":"string","internalType":"string"},{"name":"_managementKeys","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"createTokenIdentity","inputs":[{"name":"_token","type":"address","internalType":"address"},{"name":"_tokenOwner","type":"address","internalType":"address"},{"name":"_salt","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"getIdentity","inputs":[{"name":"_wallet","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getToken","inputs":[{"name":"_identity","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getWallets","inputs":[{"name":"_identity","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"implementationAuthority","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isSaltTaken","inputs":[{"name":"_salt","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isTokenFactory","inputs":[{"name":"_factory","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"linkWallet","inputs":[{"name":"_newWallet","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeTokenFactory","inputs":[{"name":"_factory","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unlinkWallet","inputs":[{"name":"_oldWallet","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Deployed","inputs":[{"name":"_addr","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TokenFactoryAdded","inputs":[{"name":"factory","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TokenFactoryRemoved","inputs":[{"name":"factory","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TokenLinked","inputs":[{"name":"token","type":"address","indexed":true,"internalType":"address"},{"name":"identity","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"WalletLinked","inputs":[{"name":"wallet","type":"address","indexed":true,"internalType":"address"},{"name":"identity","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"WalletUnlinked","inputs":[{"name":"wallet","type":"address","indexed":true,"internalType":"address"},{"name":"identity","type":"address","indexed":true,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addTokenFactory(address)":"9ce19365","createIdentity(address,string)":"8e952bfe","createIdentityWithManagementKeys(address,string,bytes32[])":"fe5cd59a","createTokenIdentity(address,address,string)":"3d56ff66","getIdentity(address)":"2fea7b81","getToken(address)":"59770438","getWallets(address)":"422c29a4","implementationAuthority()":"2307f882","isSaltTaken(string)":"3a500451","isTokenFactory(address)":"3e3bc3d7","linkWallet(address)":"b8bb8126","removeTokenFactory(address)":"937529ef","unlinkWallet(address)":"5027dbe2"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"TokenFactoryAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"TokenFactoryRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"TokenLinked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"WalletLinked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"identity\",\"type\":\"address\"}],\"name\":\"WalletUnlinked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"addTokenFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"}],\"name\":\"createIdentity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"_managementKeys\",\"type\":\"bytes32[]\"}],\"name\":\"createIdentityWithManagementKeys\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"}],\"name\":\"createTokenIdentity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"getIdentity\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identity\",\"type\":\"address\"}],\"name\":\"getWallets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementationAuthority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"}],\"name\":\"isSaltTaken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"isTokenFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newWallet\",\"type\":\"address\"}],\"name\":\"linkWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"removeTokenFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oldWallet\",\"type\":\"address\"}],\"name\":\"unlinkWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTokenFactory(address)\":{\"details\":\"function used to register an address as a token factory\",\"params\":{\"_factory\":\"the address of the token factory  can be called only by Owner  _factory cannot be registered yet  once the factory has been registered it can deploy token identities\"}},\"createIdentity(address,string)\":{\"details\":\"function used to create a new Identity proxy from the factory\",\"params\":{\"_salt\":\"the salt used by create2 to issue the contract  requires a new salt for each deployment  _wallet cannot be linked to another ONCHAINID  only Owner can call => Owner is supposed to be a smart contract, managing the accessibility  of the function, including calls to oracles for multichain  deployment security (avoid identity theft), defining payment requirements, etc.\",\"_wallet\":\"the wallet address of the primary owner of this ONCHAINID contract\"}},\"createIdentityWithManagementKeys(address,string,bytes32[])\":{\"details\":\"function used to create a new Identity proxy from the factory, setting the wallet and listed keys as MANAGEMENT keys.\",\"params\":{\"_managementKeys\":\"A list of keys hash (keccak256(abiEncoded())) to add as MANAGEMENT keys.  requires a new salt for each deployment  _wallet cannot be linked to another ONCHAINID  only Owner can call => Owner is supposed to be a smart contract, managing the accessibility  of the function, including calls to oracles for multichain  deployment security (avoid identity theft), defining payment requirements, etc.\",\"_salt\":\"the salt used by create2 to issue the contract\",\"_wallet\":\"the wallet address of the primary owner of this ONCHAINID contract\"}},\"createTokenIdentity(address,address,string)\":{\"details\":\"function used to create a new Token Identity proxy from the factory\",\"params\":{\"_salt\":\"the salt used by create2 to issue the contract  requires a new salt for each deployment  _token cannot be linked to another ONCHAINID  only Token factory or owner can call (owner should only use its privilege  for tokens not issued by a Token factory onchain\",\"_token\":\"the address of the token contract\",\"_tokenOwner\":\"the owner address of the token\"}},\"getIdentity(address)\":{\"details\":\"getter for OID contract corresponding to a wallet/token\",\"params\":{\"_wallet\":\"the wallet/token address\"}},\"getToken(address)\":{\"details\":\"getter to fetch the token address linked to an OID contract\",\"params\":{\"_identity\":\"the address of the OID contract  returns the address linked to the OID\"}},\"getWallets(address)\":{\"details\":\"getter to fetch the array of wallets linked to an OID contract\",\"params\":{\"_identity\":\"the address of the OID contract  returns an array of addresses linked to the OID\"}},\"implementationAuthority()\":{\"details\":\"getter for the implementation authority used by this factory.\"},\"isSaltTaken(string)\":{\"details\":\"getter to know if a salt is taken for the create2 deployment\",\"params\":{\"_salt\":\"the salt used for deployment\"}},\"isTokenFactory(address)\":{\"details\":\"getter to know if an address is registered as token factory or not\",\"params\":{\"_factory\":\"the address of the factory  returns true if the address corresponds to a registered factory\"}},\"linkWallet(address)\":{\"details\":\"function used to link a new wallet to an existing identity\",\"params\":{\"_newWallet\":\"the address of the wallet to link  requires msg.sender to be linked to an existing onchainid  the _newWallet will be linked to the same OID contract as msg.sender  _newWallet cannot be linked to an OID yet  _newWallet cannot be address 0  cannot link more than 100 wallets to an OID, for gas consumption reason\"}},\"removeTokenFactory(address)\":{\"details\":\"function used to unregister an address previously registered as a token factory\",\"params\":{\"_factory\":\"the address of the token factory  can be called only by Owner  _factory has to be registered previously  once the factory has been unregistered it cannot deploy token identities anymore\"}},\"unlinkWallet(address)\":{\"details\":\"function used to unlink a wallet from an existing identity\",\"params\":{\"_oldWallet\":\"the address of the wallet to unlink  requires msg.sender to be linked to the same onchainid as _oldWallet  msg.sender cannot be _oldWallet to keep at least 1 wallet linked to any OID  _oldWallet cannot be address 0\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Deployed(address)\":{\"notice\":\"events\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/solidity/contracts/factory/IIdFactory.sol\":\"IIdFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchain-id/=lib/ERC-3643/node_modules/@onchain-id/\",\":@openzeppelin/=lib/ERC-3643/node_modules/@openzeppelin/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=lib/ERC-3643/node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/ERC-3643/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity/=lib/solidity/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/solidity/contracts/factory/IIdFactory.sol\":{\"keccak256\":\"0x5d60726074e12a5291b9179d6afa5abd3c9d2c46ef84011a1275577db085687e\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://224c933b538f2eb04a1292bd1e757acfd440e0eff466d181a273c95071a50c54\",\"dweb:/ipfs/QmRhv7NKgnE7Eq7dLneH9h7ThgpyMRQcx3L2yr6imfNUMp\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.17+commit.8df45f5f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_addr","type":"address","indexed":true}],"type":"event","name":"Deployed","anonymous":false},{"inputs":[{"internalType":"address","name":"factory","type":"address","indexed":true}],"type":"event","name":"TokenFactoryAdded","anonymous":false},{"inputs":[{"internalType":"address","name":"factory","type":"address","indexed":true}],"type":"event","name":"TokenFactoryRemoved","anonymous":false},{"inputs":[{"internalType":"address","name":"token","type":"address","indexed":true},{"internalType":"address","name":"identity","type":"address","indexed":true}],"type":"event","name":"TokenLinked","anonymous":false},{"inputs":[{"internalType":"address","name":"wallet","type":"address","indexed":true},{"internalType":"address","name":"identity","type":"address","indexed":true}],"type":"event","name":"WalletLinked","anonymous":false},{"inputs":[{"internalType":"address","name":"wallet","type":"address","indexed":true},{"internalType":"address","name":"identity","type":"address","indexed":true}],"type":"event","name":"WalletUnlinked","anonymous":false},{"inputs":[{"internalType":"address","name":"_factory","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addTokenFactory"},{"inputs":[{"internalType":"address","name":"_wallet","type":"address"},{"internalType":"string","name":"_salt","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createIdentity","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_wallet","type":"address"},{"internalType":"string","name":"_salt","type":"string"},{"internalType":"bytes32[]","name":"_managementKeys","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"createIdentityWithManagementKeys","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_tokenOwner","type":"address"},{"internalType":"string","name":"_salt","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createTokenIdentity","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_wallet","type":"address"}],"stateMutability":"view","type":"function","name":"getIdentity","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_identity","type":"address"}],"stateMutability":"view","type":"function","name":"getToken","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_identity","type":"address"}],"stateMutability":"view","type":"function","name":"getWallets","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"implementationAuthority","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"_salt","type":"string"}],"stateMutability":"view","type":"function","name":"isSaltTaken","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_factory","type":"address"}],"stateMutability":"view","type":"function","name":"isTokenFactory","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_newWallet","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"linkWallet"},{"inputs":[{"internalType":"address","name":"_factory","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"removeTokenFactory"},{"inputs":[{"internalType":"address","name":"_oldWallet","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"unlinkWallet"}],"devdoc":{"kind":"dev","methods":{"addTokenFactory(address)":{"details":"function used to register an address as a token factory","params":{"_factory":"the address of the token factory  can be called only by Owner  _factory cannot be registered yet  once the factory has been registered it can deploy token identities"}},"createIdentity(address,string)":{"details":"function used to create a new Identity proxy from the factory","params":{"_salt":"the salt used by create2 to issue the contract  requires a new salt for each deployment  _wallet cannot be linked to another ONCHAINID  only Owner can call => Owner is supposed to be a smart contract, managing the accessibility  of the function, including calls to oracles for multichain  deployment security (avoid identity theft), defining payment requirements, etc.","_wallet":"the wallet address of the primary owner of this ONCHAINID contract"}},"createIdentityWithManagementKeys(address,string,bytes32[])":{"details":"function used to create a new Identity proxy from the factory, setting the wallet and listed keys as MANAGEMENT keys.","params":{"_managementKeys":"A list of keys hash (keccak256(abiEncoded())) to add as MANAGEMENT keys.  requires a new salt for each deployment  _wallet cannot be linked to another ONCHAINID  only Owner can call => Owner is supposed to be a smart contract, managing the accessibility  of the function, including calls to oracles for multichain  deployment security (avoid identity theft), defining payment requirements, etc.","_salt":"the salt used by create2 to issue the contract","_wallet":"the wallet address of the primary owner of this ONCHAINID contract"}},"createTokenIdentity(address,address,string)":{"details":"function used to create a new Token Identity proxy from the factory","params":{"_salt":"the salt used by create2 to issue the contract  requires a new salt for each deployment  _token cannot be linked to another ONCHAINID  only Token factory or owner can call (owner should only use its privilege  for tokens not issued by a Token factory onchain","_token":"the address of the token contract","_tokenOwner":"the owner address of the token"}},"getIdentity(address)":{"details":"getter for OID contract corresponding to a wallet/token","params":{"_wallet":"the wallet/token address"}},"getToken(address)":{"details":"getter to fetch the token address linked to an OID contract","params":{"_identity":"the address of the OID contract  returns the address linked to the OID"}},"getWallets(address)":{"details":"getter to fetch the array of wallets linked to an OID contract","params":{"_identity":"the address of the OID contract  returns an array of addresses linked to the OID"}},"implementationAuthority()":{"details":"getter for the implementation authority used by this factory."},"isSaltTaken(string)":{"details":"getter to know if a salt is taken for the create2 deployment","params":{"_salt":"the salt used for deployment"}},"isTokenFactory(address)":{"details":"getter to know if an address is registered as token factory or not","params":{"_factory":"the address of the factory  returns true if the address corresponds to a registered factory"}},"linkWallet(address)":{"details":"function used to link a new wallet to an existing identity","params":{"_newWallet":"the address of the wallet to link  requires msg.sender to be linked to an existing onchainid  the _newWallet will be linked to the same OID contract as msg.sender  _newWallet cannot be linked to an OID yet  _newWallet cannot be address 0  cannot link more than 100 wallets to an OID, for gas consumption reason"}},"removeTokenFactory(address)":{"details":"function used to unregister an address previously registered as a token factory","params":{"_factory":"the address of the token factory  can be called only by Owner  _factory has to be registered previously  once the factory has been unregistered it cannot deploy token identities anymore"}},"unlinkWallet(address)":{"details":"function used to unlink a wallet from an existing identity","params":{"_oldWallet":"the address of the wallet to unlink  requires msg.sender to be linked to the same onchainid as _oldWallet  msg.sender cannot be _oldWallet to keep at least 1 wallet linked to any OID  _oldWallet cannot be address 0"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@onchain-id/=lib/ERC-3643/node_modules/@onchain-id/","@openzeppelin/=lib/ERC-3643/node_modules/@openzeppelin/","ERC-3643/=lib/ERC-3643/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","eth-gas-reporter/=lib/ERC-3643/node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=lib/ERC-3643/node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solidity/=lib/solidity/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/solidity/contracts/factory/IIdFactory.sol":"IIdFactory"},"evmVersion":"london","libraries":{},"viaIR":true},"sources":{"lib/solidity/contracts/factory/IIdFactory.sol":{"keccak256":"0x5d60726074e12a5291b9179d6afa5abd3c9d2c46ef84011a1275577db085687e","urls":["bzz-raw://224c933b538f2eb04a1292bd1e757acfd440e0eff466d181a273c95071a50c54","dweb:/ipfs/QmRhv7NKgnE7Eq7dLneH9h7ThgpyMRQcx3L2yr6imfNUMp"],"license":"GPL-3.0"}},"version":1},"id":15}