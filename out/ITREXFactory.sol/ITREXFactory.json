{"abi":[{"type":"function","name":"deployTREXSuite","inputs":[{"name":"_salt","type":"string","internalType":"string"},{"name":"_tokenDetails","type":"tuple","internalType":"struct ITREXFactory.TokenDetails","components":[{"name":"owner","type":"address","internalType":"address"},{"name":"name","type":"string","internalType":"string"},{"name":"symbol","type":"string","internalType":"string"},{"name":"decimals","type":"uint8","internalType":"uint8"},{"name":"irs","type":"address","internalType":"address"},{"name":"ONCHAINID","type":"address","internalType":"address"},{"name":"irAgents","type":"address[]","internalType":"address[]"},{"name":"tokenAgents","type":"address[]","internalType":"address[]"},{"name":"complianceModules","type":"address[]","internalType":"address[]"},{"name":"complianceSettings","type":"bytes[]","internalType":"bytes[]"}]},{"name":"_claimDetails","type":"tuple","internalType":"struct ITREXFactory.ClaimDetails","components":[{"name":"claimTopics","type":"uint256[]","internalType":"uint256[]"},{"name":"issuers","type":"address[]","internalType":"address[]"},{"name":"issuerClaims","type":"uint256[][]","internalType":"uint256[][]"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getIdFactory","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getImplementationAuthority","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"getToken","inputs":[{"name":"_salt","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"recoverContractOwnership","inputs":[{"name":"_contract","type":"address","internalType":"address"},{"name":"_newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setIdFactory","inputs":[{"name":"_idFactory","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setImplementationAuthority","inputs":[{"name":"_implementationAuthority","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"Deployed","inputs":[{"name":"_addr","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"IdFactorySet","inputs":[{"name":"_idFactory","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ImplementationAuthoritySet","inputs":[{"name":"_implementationAuthority","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TREXSuiteDeployed","inputs":[{"name":"_token","type":"address","indexed":true,"internalType":"address"},{"name":"_ir","type":"address","indexed":false,"internalType":"address"},{"name":"_irs","type":"address","indexed":false,"internalType":"address"},{"name":"_tir","type":"address","indexed":false,"internalType":"address"},{"name":"_ctr","type":"address","indexed":false,"internalType":"address"},{"name":"_mc","type":"address","indexed":false,"internalType":"address"},{"name":"_salt","type":"string","indexed":true,"internalType":"string"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"deployTREXSuite(string,(address,string,string,uint8,address,address,address[],address[],address[],bytes[]),(uint256[],address[],uint256[][]))":"cf753d37","getIdFactory()":"5f2773a5","getImplementationAuthority()":"2d5f1187","getToken(string)":"c1733f68","recoverContractOwnership(address,address)":"50b01838","setIdFactory(address)":"ccd41cce","setImplementationAuthority(address)":"92dd9d65"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"Deployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_idFactory\",\"type\":\"address\"}],\"name\":\"IdFactorySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_implementationAuthority\",\"type\":\"address\"}],\"name\":\"ImplementationAuthoritySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_ir\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_irs\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_tir\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_ctr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_mc\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"}],\"name\":\"TREXSuiteDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"irs\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ONCHAINID\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"irAgents\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenAgents\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"complianceModules\",\"type\":\"address[]\"},{\"internalType\":\"bytes[]\",\"name\":\"complianceSettings\",\"type\":\"bytes[]\"}],\"internalType\":\"struct ITREXFactory.TokenDetails\",\"name\":\"_tokenDetails\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[]\",\"name\":\"claimTopics\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"issuers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[][]\",\"name\":\"issuerClaims\",\"type\":\"uint256[][]\"}],\"internalType\":\"struct ITREXFactory.ClaimDetails\",\"name\":\"_claimDetails\",\"type\":\"tuple\"}],\"name\":\"deployTREXSuite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIdFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getImplementationAuthority\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_salt\",\"type\":\"string\"}],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"recoverContractOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_idFactory\",\"type\":\"address\"}],\"name\":\"setIdFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementationAuthority\",\"type\":\"address\"}],\"name\":\"setImplementationAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deployTREXSuite(string,(address,string,string,uint8,address,address,address[],address[],address[],bytes[]),(uint256[],address[],uint256[][]))\":{\"details\":\"function used to deploy a new TREX token and set all the parameters as required by the issuer paperwork  this function will deploy and set the contracts as follow :  Token : deploy the token contract (proxy) and set the name, symbol, ONCHAINID, decimals, owner, agents,  IR address , Compliance address  Identity Registry : deploy the IR contract (proxy) and set the owner, agents,  IRS address, TIR address, CTR address  IRS : deploy IRS contract (proxy) if required (address set as 0 in the TokenDetails, bind IRS to IR, set owner  CTR : deploy CTR contract (proxy), set required claims, set owner  TIR : deploy TIR contract (proxy), set trusted issuers, set owner  Compliance: deploy modular compliance, bind with token, add modules, set modules parameters, set owner  All contracts are deployed using CREATE2 opcode, and therefore are deployed at a predetermined address  The address can be the same on all EVM blockchains as long as the factory address is the same as well  Only owner can call.  emits `TREXSuiteDeployed` event\",\"params\":{\"_claimDetails\":\"The details of the claims and claim issuers (see struct ClaimDetails for more details)  cannot add more than 5 agents on IR and 5 agents on Token  cannot add more than 5 claim topics required and more than 5 trusted issuers  cannot add more than 30 compliance settings transactions\",\"_salt\":\"the salt used to make the contracts deployments with CREATE2\",\"_tokenDetails\":\"The details of the token to deploy (see struct TokenDetails for more details)\"}},\"getIdFactory()\":{\"details\":\"getter for identity factory address\"},\"getImplementationAuthority()\":{\"details\":\"getter for implementation authority address\"},\"getToken(string)\":{\"details\":\"getter for token address corresponding to salt string\",\"params\":{\"_salt\":\"The salt string that was used to deploy the token\"}},\"recoverContractOwnership(address,address)\":{\"details\":\"function that can be used to recover the ownership of contracts owned by the factory  typically used for IRS contracts owned by the factory (ownership of IRS is mandatory to call bind function)\",\"params\":{\"_contract\":\"The smart contract address\",\"_newOwner\":\"The address to transfer ownership to  Only owner can call.\"}},\"setIdFactory(address)\":{\"details\":\"setter for identity factory contract address  the identity factory contract is used by the TREX Factory to deploy the ONCHAINID  of the token in case the ONCHAINID is not specified  Only owner can call.  emits `IdFactorySet` event\",\"params\":{\"_idFactory\":\"The address of the identity factory contract\"}},\"setImplementationAuthority(address)\":{\"details\":\"setter for implementation authority contract address  the implementation authority contract contains the addresses of all implementation contracts  the proxies created by the factory will use the different implementations available  in the implementation authority contract  Only owner can call.  emits `ImplementationAuthoritySet` event\",\"params\":{\"_implementationAuthority\":\"The address of the implementation authority smart contract\"}}},\"version\":1},\"userdoc\":{\"events\":{\"Deployed(address)\":{\"notice\":\"event emitted whenever a single contract is deployed by the factory\"},\"IdFactorySet(address)\":{\"notice\":\"event emitted when the Identity Factory is set\"},\"ImplementationAuthoritySet(address)\":{\"notice\":\"event emitted when the implementation authority of the factory contract is set\"},\"TREXSuiteDeployed(address,address,address,address,address,address,string)\":{\"notice\":\"event emitted by the factory when a full suite of T-REX contracts is deployed\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/ERC-3643/contracts/factory/ITREXFactory.sol\":\"ITREXFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@onchain-id/=lib/ERC-3643/node_modules/@onchain-id/\",\":@openzeppelin/=lib/ERC-3643/node_modules/@openzeppelin/\",\":ERC-3643/=lib/ERC-3643/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=lib/ERC-3643/node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=lib/ERC-3643/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solidity/=lib/solidity/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/ERC-3643/contracts/factory/ITREXFactory.sol\":{\"keccak256\":\"0x3f31f786a3935c11cd654aa89c00bf99f2a589d2c5ffc1da522e4ae1aeb3c997\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0078f13d7ec7fa8ae61515b626c52742218592716a0ea352114f34ee7d721deb\",\"dweb:/ipfs/QmamTEA91N5QK9LTvzV7NHBkhTQCPAhJzmXYcvP17YGRpt\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.17+commit.8df45f5f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_addr","type":"address","indexed":true}],"type":"event","name":"Deployed","anonymous":false},{"inputs":[{"internalType":"address","name":"_idFactory","type":"address","indexed":false}],"type":"event","name":"IdFactorySet","anonymous":false},{"inputs":[{"internalType":"address","name":"_implementationAuthority","type":"address","indexed":false}],"type":"event","name":"ImplementationAuthoritySet","anonymous":false},{"inputs":[{"internalType":"address","name":"_token","type":"address","indexed":true},{"internalType":"address","name":"_ir","type":"address","indexed":false},{"internalType":"address","name":"_irs","type":"address","indexed":false},{"internalType":"address","name":"_tir","type":"address","indexed":false},{"internalType":"address","name":"_ctr","type":"address","indexed":false},{"internalType":"address","name":"_mc","type":"address","indexed":false},{"internalType":"string","name":"_salt","type":"string","indexed":true}],"type":"event","name":"TREXSuiteDeployed","anonymous":false},{"inputs":[{"internalType":"string","name":"_salt","type":"string"},{"internalType":"struct ITREXFactory.TokenDetails","name":"_tokenDetails","type":"tuple","components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"address","name":"irs","type":"address"},{"internalType":"address","name":"ONCHAINID","type":"address"},{"internalType":"address[]","name":"irAgents","type":"address[]"},{"internalType":"address[]","name":"tokenAgents","type":"address[]"},{"internalType":"address[]","name":"complianceModules","type":"address[]"},{"internalType":"bytes[]","name":"complianceSettings","type":"bytes[]"}]},{"internalType":"struct ITREXFactory.ClaimDetails","name":"_claimDetails","type":"tuple","components":[{"internalType":"uint256[]","name":"claimTopics","type":"uint256[]"},{"internalType":"address[]","name":"issuers","type":"address[]"},{"internalType":"uint256[][]","name":"issuerClaims","type":"uint256[][]"}]}],"stateMutability":"nonpayable","type":"function","name":"deployTREXSuite"},{"inputs":[],"stateMutability":"view","type":"function","name":"getIdFactory","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getImplementationAuthority","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"_salt","type":"string"}],"stateMutability":"view","type":"function","name":"getToken","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"_contract","type":"address"},{"internalType":"address","name":"_newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"recoverContractOwnership"},{"inputs":[{"internalType":"address","name":"_idFactory","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setIdFactory"},{"inputs":[{"internalType":"address","name":"_implementationAuthority","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setImplementationAuthority"}],"devdoc":{"kind":"dev","methods":{"deployTREXSuite(string,(address,string,string,uint8,address,address,address[],address[],address[],bytes[]),(uint256[],address[],uint256[][]))":{"details":"function used to deploy a new TREX token and set all the parameters as required by the issuer paperwork  this function will deploy and set the contracts as follow :  Token : deploy the token contract (proxy) and set the name, symbol, ONCHAINID, decimals, owner, agents,  IR address , Compliance address  Identity Registry : deploy the IR contract (proxy) and set the owner, agents,  IRS address, TIR address, CTR address  IRS : deploy IRS contract (proxy) if required (address set as 0 in the TokenDetails, bind IRS to IR, set owner  CTR : deploy CTR contract (proxy), set required claims, set owner  TIR : deploy TIR contract (proxy), set trusted issuers, set owner  Compliance: deploy modular compliance, bind with token, add modules, set modules parameters, set owner  All contracts are deployed using CREATE2 opcode, and therefore are deployed at a predetermined address  The address can be the same on all EVM blockchains as long as the factory address is the same as well  Only owner can call.  emits `TREXSuiteDeployed` event","params":{"_claimDetails":"The details of the claims and claim issuers (see struct ClaimDetails for more details)  cannot add more than 5 agents on IR and 5 agents on Token  cannot add more than 5 claim topics required and more than 5 trusted issuers  cannot add more than 30 compliance settings transactions","_salt":"the salt used to make the contracts deployments with CREATE2","_tokenDetails":"The details of the token to deploy (see struct TokenDetails for more details)"}},"getIdFactory()":{"details":"getter for identity factory address"},"getImplementationAuthority()":{"details":"getter for implementation authority address"},"getToken(string)":{"details":"getter for token address corresponding to salt string","params":{"_salt":"The salt string that was used to deploy the token"}},"recoverContractOwnership(address,address)":{"details":"function that can be used to recover the ownership of contracts owned by the factory  typically used for IRS contracts owned by the factory (ownership of IRS is mandatory to call bind function)","params":{"_contract":"The smart contract address","_newOwner":"The address to transfer ownership to  Only owner can call."}},"setIdFactory(address)":{"details":"setter for identity factory contract address  the identity factory contract is used by the TREX Factory to deploy the ONCHAINID  of the token in case the ONCHAINID is not specified  Only owner can call.  emits `IdFactorySet` event","params":{"_idFactory":"The address of the identity factory contract"}},"setImplementationAuthority(address)":{"details":"setter for implementation authority contract address  the implementation authority contract contains the addresses of all implementation contracts  the proxies created by the factory will use the different implementations available  in the implementation authority contract  Only owner can call.  emits `ImplementationAuthoritySet` event","params":{"_implementationAuthority":"The address of the implementation authority smart contract"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@onchain-id/=lib/ERC-3643/node_modules/@onchain-id/","@openzeppelin/=lib/ERC-3643/node_modules/@openzeppelin/","ERC-3643/=lib/ERC-3643/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","eth-gas-reporter/=lib/ERC-3643/node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=lib/ERC-3643/node_modules/hardhat/","openzeppelin-contracts/=lib/openzeppelin-contracts/","solidity/=lib/solidity/contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/ERC-3643/contracts/factory/ITREXFactory.sol":"ITREXFactory"},"evmVersion":"london","libraries":{},"viaIR":true},"sources":{"lib/ERC-3643/contracts/factory/ITREXFactory.sol":{"keccak256":"0x3f31f786a3935c11cd654aa89c00bf99f2a589d2c5ffc1da522e4ae1aeb3c997","urls":["bzz-raw://0078f13d7ec7fa8ae61515b626c52742218592716a0ea352114f34ee7d721deb","dweb:/ipfs/QmamTEA91N5QK9LTvzV7NHBkhTQCPAhJzmXYcvP17YGRpt"],"license":"GPL-3.0"}},"version":1},"id":4}